(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["init"] = factory();
	else
		root["init"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/theme/editor/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./editor.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./editor.js":
/*!*******************!*\
  !*** ./editor.js ***!
  \*******************/
/*! exports provided: iniEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iniEditor\", function() { return iniEditor; });\n/* harmony import */ var monaco_textmate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! monaco-textmate */ \"./node_modules/monaco-textmate/dist/main.js\");\n/* harmony import */ var monaco_textmate__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(monaco_textmate__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var monaco_editor_textmate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! monaco-editor-textmate */ \"./node_modules/monaco-editor-textmate/dist/index.js\");\n/* harmony import */ var monaco_editor_textmate__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(monaco_editor_textmate__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var onigasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! onigasm */ \"./node_modules/onigasm/lib/index.js\");\n/* harmony import */ var onigasm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(onigasm__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst onigasm = Object(onigasm__WEBPACK_IMPORTED_MODULE_2__[\"loadWASM\"])('theme/editor/static/onigasm.wasm')\n\nasync function iniEditor({ editor, languages }) {\n\tconsole.log('iniEditor',  editor, languages)\n\tawait onigasm // only load onigasm asm once\n\tconst typescript = new monaco_textmate__WEBPACK_IMPORTED_MODULE_0__[\"Registry\"]({\n\t\tgetGrammarDefinition: async (scopeName) => {\n\t\t\tconsole.log('getGrammarDefinition', scopeName)\n\t\t\treturn {\n\t\t\t\tformat: 'json',\n\t\t\t\tcontent: await (await fetch('theme/editor/static/TypeScript.tmLanguage.json')).text(),\n\t\t\t}\n\t\t}\n\t})\n\tconst javascript = new monaco_textmate__WEBPACK_IMPORTED_MODULE_0__[\"Registry\"]({\n\t\tgetGrammarDefinition: async (scopeName) => ({\n\t\t\tformat: 'json',\n\t\t\tcontent: await (await fetch('theme/editor/static/JavaScript.tmLanguage.json')).text(),\n\t\t})\n\t})\n\tconst grammars = new Map()\n\tgrammars.set('typescript', 'source.ts')\n\tgrammars.set('javascript', 'source.ts')\n\tawait Object(monaco_editor_textmate__WEBPACK_IMPORTED_MODULE_1__[\"wireTmGrammars\"])({languages}, typescript, grammars)\n\teditor.defineTheme('dimmed-monokai', {\n\t\t'base': 'vs-dark',\n\t\t'inherit': true,\n\t\t'rules': [\n\t\t  {\n\t\t\t'foreground': '9a9b99',\n\t\t\t'fontStyle': '\\n        ',\n\t\t\t'token': 'comment'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'string'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd08442',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'string source'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'constant.numeric'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '408080',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'constant.language'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '8080ff',\n\t\t\t'background': '1e1e1e',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'constant.character'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '8080ff',\n\t\t\t'background': '1e1e1e',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'constant.other'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'keyword'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'c7444a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'support'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'storage'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9b0000',\n\t\t\t'background': '1e1e1e',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.class'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9b0000',\n\t\t\t'background': '1e1e1e',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.type.class'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9b0000',\n\t\t\t'background': '1e1e1e',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.type.module'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'c7444a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.other.inherited-class'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'ce6700',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.function'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.parameter'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.tag'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.other.attribute-name'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'support.function'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '676867',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'keyword'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.other'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.js'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.separator.variable'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'ff0080',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'constant.language'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '008200',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.section.embedded -(source string source punctuation.section.embedded)'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '008200',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.brace.erb.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'ff0b00',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'invalid'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.other.php'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.other.normal'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '0080ff',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.function-call'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.function-call.object'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.other.property'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'keyword.control'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.tag'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.doctype'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag.sgml-declaration.doctype'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag.sgml.doctype'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag.inline source'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'text.html.php.source'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag.other'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.tag.style'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.name.tag.script'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag.block.script'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'source.js.embedded punctuation.definition.tag.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'source.css.embedded punctuation.definition.tag.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'entity.other.attribute-name'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag punctuation.definition.string'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.tag string -source -punctuation'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'text source text meta.tag string -punctuation'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.section.embedded -(source string source punctuation.section.embedded)'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.brace.erb.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'token': 'meta.toc-list.id'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'string.quoted.double.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.definition.string.begin.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.definition.string.end.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.definition.tag.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.definition.tag.begin'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '6089b4',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.definition.tag.end'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9872a2',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.selector.css entity.other.attribute-name.id'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '676867',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'support.type.property-name.css'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'c7444a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.property-group support.constant.property-value.css'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'c7444a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.property-value support.constant.property-value.css'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'cc555a',\n\t\t\t'token': 'variable.language.js'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'meta.function-call.object.php'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'token': 'punctuation.definition.string.end.php'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'token': 'punctuation.definition.string.begin.php'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '676867',\n\t\t\t'token': 'source.php.embedded.line.html'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd08442',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.section.embedded.begin.php'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd08442',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'punctuation.section.embedded.end.php'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': '9aa83a',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'constant.other.symbol.ruby'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'variable.language.ruby'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd9b700',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'keyword.other.special-method.ruby'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd08442',\n\t\t\t'token': 'source.ruby.embedded.source'\n\t\t  },\n\t\t  {\n\t\t\t'foreground': 'd0b344',\n\t\t\t'fontStyle': '\\n    ',\n\t\t\t'token': 'keyword.other.DML.sql'\n\t\t  }\n\t\t],\n\t\t'colors': {\n\t\t  'editor.foreground': '#C5C8C6',\n\t\t  'editor.background': '#1e1e1e',\n\t\t  'editor.selectionBackground': '#373B41',\n\t\t  'editor.lineHighlightBackground': '#282A2E',\n\t\t  'editorCursor.foreground': '#fc5604',\n\t\t  'editorWhitespace.foreground': '#4B4E55'\n\t\t}\n\t})\n\teditor.setTheme('dimmed-monokai')\n}\n\n\n//# sourceURL=webpack://init/./editor.js?");

/***/ }),

/***/ "./node_modules/fast-plist/release/src/main.js":
/*!*****************************************************!*\
  !*** ./node_modules/fast-plist/release/src/main.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\n\r\nfunction parseWithLocation(content, filename, locationKeyName) {\r\n    return _parse(content, filename, locationKeyName);\r\n}\r\nexports.parseWithLocation = parseWithLocation;\r\n/**\r\n * A very fast plist parser\r\n */\r\nfunction parse(content) {\r\n    return _parse(content, null, null);\r\n}\r\nexports.parse = parse;\r\nfunction _parse(content, filename, locationKeyName) {\r\n    var len = content.length;\r\n    var pos = 0;\r\n    var line = 1;\r\n    var char = 0;\r\n    // Skip UTF8 BOM\r\n    if (len > 0 && content.charCodeAt(0) === 65279 /* BOM */) {\r\n        pos = 1;\r\n    }\r\n    function advancePosBy(by) {\r\n        if (locationKeyName === null) {\r\n            pos = pos + by;\r\n        }\r\n        else {\r\n            while (by > 0) {\r\n                var chCode = content.charCodeAt(pos);\r\n                if (chCode === 10 /* LINE_FEED */) {\r\n                    pos++;\r\n                    line++;\r\n                    char = 0;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    char++;\r\n                }\r\n                by--;\r\n            }\r\n        }\r\n    }\r\n    function advancePosTo(to) {\r\n        if (locationKeyName === null) {\r\n            pos = to;\r\n        }\r\n        else {\r\n            advancePosBy(to - pos);\r\n        }\r\n    }\r\n    function skipWhitespace() {\r\n        while (pos < len) {\r\n            var chCode = content.charCodeAt(pos);\r\n            if (chCode !== 32 /* SPACE */ && chCode !== 9 /* TAB */ && chCode !== 13 /* CARRIAGE_RETURN */ && chCode !== 10 /* LINE_FEED */) {\r\n                break;\r\n            }\r\n            advancePosBy(1);\r\n        }\r\n    }\r\n    function advanceIfStartsWith(str) {\r\n        if (content.substr(pos, str.length) === str) {\r\n            advancePosBy(str.length);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function advanceUntil(str) {\r\n        var nextOccurence = content.indexOf(str, pos);\r\n        if (nextOccurence !== -1) {\r\n            advancePosTo(nextOccurence + str.length);\r\n        }\r\n        else {\r\n            // EOF\r\n            advancePosTo(len);\r\n        }\r\n    }\r\n    function captureUntil(str) {\r\n        var nextOccurence = content.indexOf(str, pos);\r\n        if (nextOccurence !== -1) {\r\n            var r = content.substring(pos, nextOccurence);\r\n            advancePosTo(nextOccurence + str.length);\r\n            return r;\r\n        }\r\n        else {\r\n            // EOF\r\n            var r = content.substr(pos);\r\n            advancePosTo(len);\r\n            return r;\r\n        }\r\n    }\r\n    var state = 0 /* ROOT_STATE */;\r\n    var cur = null;\r\n    var stateStack = [];\r\n    var objStack = [];\r\n    var curKey = null;\r\n    function pushState(newState, newCur) {\r\n        stateStack.push(state);\r\n        objStack.push(cur);\r\n        state = newState;\r\n        cur = newCur;\r\n    }\r\n    function popState() {\r\n        state = stateStack.pop();\r\n        cur = objStack.pop();\r\n    }\r\n    function fail(msg) {\r\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\r\n    }\r\n    var dictState = {\r\n        enterDict: function () {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            var newDict = {};\r\n            if (locationKeyName !== null) {\r\n                newDict[locationKeyName] = {\r\n                    filename: filename,\r\n                    line: line,\r\n                    char: char\r\n                };\r\n            }\r\n            cur[curKey] = newDict;\r\n            curKey = null;\r\n            pushState(1 /* DICT_STATE */, newDict);\r\n        },\r\n        enterArray: function () {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            var newArr = [];\r\n            cur[curKey] = newArr;\r\n            curKey = null;\r\n            pushState(2 /* ARR_STATE */, newArr);\r\n        }\r\n    };\r\n    var arrState = {\r\n        enterDict: function () {\r\n            var newDict = {};\r\n            if (locationKeyName !== null) {\r\n                newDict[locationKeyName] = {\r\n                    filename: filename,\r\n                    line: line,\r\n                    char: char\r\n                };\r\n            }\r\n            cur.push(newDict);\r\n            pushState(1 /* DICT_STATE */, newDict);\r\n        },\r\n        enterArray: function () {\r\n            var newArr = [];\r\n            cur.push(newArr);\r\n            pushState(2 /* ARR_STATE */, newArr);\r\n        }\r\n    };\r\n    function enterDict() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            dictState.enterDict();\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            arrState.enterDict();\r\n        }\r\n        else {\r\n            cur = {};\r\n            if (locationKeyName !== null) {\r\n                cur[locationKeyName] = {\r\n                    filename: filename,\r\n                    line: line,\r\n                    char: char\r\n                };\r\n            }\r\n            pushState(1 /* DICT_STATE */, cur);\r\n        }\r\n    }\r\n    function leaveDict() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            popState();\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            fail('unexpected </dict>');\r\n        }\r\n        else {\r\n            fail('unexpected </dict>');\r\n        }\r\n    }\r\n    function enterArray() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            dictState.enterArray();\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            arrState.enterArray();\r\n        }\r\n        else {\r\n            cur = [];\r\n            pushState(2 /* ARR_STATE */, cur);\r\n        }\r\n    }\r\n    function leaveArray() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            fail('unexpected </array>');\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            popState();\r\n        }\r\n        else {\r\n            fail('unexpected </array>');\r\n        }\r\n    }\r\n    function acceptKey(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey !== null) {\r\n                fail('too many <key>');\r\n            }\r\n            curKey = val;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            fail('unexpected <key>');\r\n        }\r\n        else {\r\n            fail('unexpected <key>');\r\n        }\r\n    }\r\n    function acceptString(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptReal(val) {\r\n        if (isNaN(val)) {\r\n            fail('cannot parse float');\r\n        }\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptInteger(val) {\r\n        if (isNaN(val)) {\r\n            fail('cannot parse integer');\r\n        }\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptDate(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptData(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptBool(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function escapeVal(str) {\r\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\r\n            return String.fromCodePoint(parseInt(m0, 10));\r\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\r\n            return String.fromCodePoint(parseInt(m0, 16));\r\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\r\n            switch (_) {\r\n                case '&amp;': return '&';\r\n                case '&lt;': return '<';\r\n                case '&gt;': return '>';\r\n                case '&quot;': return '\"';\r\n                case '&apos;': return '\\'';\r\n            }\r\n            return _;\r\n        });\r\n    }\r\n    function parseOpenTag() {\r\n        var r = captureUntil('>');\r\n        var isClosed = false;\r\n        if (r.charCodeAt(r.length - 1) === 47 /* SLASH */) {\r\n            isClosed = true;\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        return {\r\n            name: r.trim(),\r\n            isClosed: isClosed\r\n        };\r\n    }\r\n    function parseTagValue(tag) {\r\n        if (tag.isClosed) {\r\n            return '';\r\n        }\r\n        var val = captureUntil('</');\r\n        advanceUntil('>');\r\n        return escapeVal(val);\r\n    }\r\n    while (pos < len) {\r\n        skipWhitespace();\r\n        if (pos >= len) {\r\n            break;\r\n        }\r\n        var chCode = content.charCodeAt(pos);\r\n        advancePosBy(1);\r\n        if (chCode !== 60 /* LESS_THAN */) {\r\n            fail('expected <');\r\n        }\r\n        if (pos >= len) {\r\n            fail('unexpected end of input');\r\n        }\r\n        var peekChCode = content.charCodeAt(pos);\r\n        if (peekChCode === 63 /* QUESTION_MARK */) {\r\n            advancePosBy(1);\r\n            advanceUntil('?>');\r\n            continue;\r\n        }\r\n        if (peekChCode === 33 /* EXCLAMATION_MARK */) {\r\n            advancePosBy(1);\r\n            if (advanceIfStartsWith('--')) {\r\n                advanceUntil('-->');\r\n                continue;\r\n            }\r\n            advanceUntil('>');\r\n            continue;\r\n        }\r\n        if (peekChCode === 47 /* SLASH */) {\r\n            advancePosBy(1);\r\n            skipWhitespace();\r\n            if (advanceIfStartsWith('plist')) {\r\n                advanceUntil('>');\r\n                continue;\r\n            }\r\n            if (advanceIfStartsWith('dict')) {\r\n                advanceUntil('>');\r\n                leaveDict();\r\n                continue;\r\n            }\r\n            if (advanceIfStartsWith('array')) {\r\n                advanceUntil('>');\r\n                leaveArray();\r\n                continue;\r\n            }\r\n            fail('unexpected closed tag');\r\n        }\r\n        var tag = parseOpenTag();\r\n        switch (tag.name) {\r\n            case 'dict':\r\n                enterDict();\r\n                if (tag.isClosed) {\r\n                    leaveDict();\r\n                }\r\n                continue;\r\n            case 'array':\r\n                enterArray();\r\n                if (tag.isClosed) {\r\n                    leaveArray();\r\n                }\r\n                continue;\r\n            case 'key':\r\n                acceptKey(parseTagValue(tag));\r\n                continue;\r\n            case 'string':\r\n                acceptString(parseTagValue(tag));\r\n                continue;\r\n            case 'real':\r\n                acceptReal(parseFloat(parseTagValue(tag)));\r\n                continue;\r\n            case 'integer':\r\n                acceptInteger(parseInt(parseTagValue(tag), 10));\r\n                continue;\r\n            case 'date':\r\n                acceptDate(new Date(parseTagValue(tag)));\r\n                continue;\r\n            case 'data':\r\n                acceptData(parseTagValue(tag));\r\n                continue;\r\n            case 'true':\r\n                parseTagValue(tag);\r\n                acceptBool(true);\r\n                continue;\r\n            case 'false':\r\n                parseTagValue(tag);\r\n                acceptBool(false);\r\n                continue;\r\n        }\r\n        if (/^plist/.test(tag.name)) {\r\n            continue;\r\n        }\r\n        fail('unexpected opened tag ' + tag.name);\r\n    }\r\n    return cur;\r\n}\r\n//# sourceMappingURL=main.js.map\n\n//# sourceURL=webpack://init/./node_modules/fast-plist/release/src/main.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack://init/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/lru-cache/index.js":
/*!*****************************************!*\
  !*** ./node_modules/lru-cache/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = __webpack_require__(/*! pseudomap */ \"./node_modules/pseudomap/map.js\")\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\")\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = __webpack_require__(/*! yallist */ \"./node_modules/yallist/yallist.js\")\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n         self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n\n\n//# sourceURL=webpack://init/./node_modules/lru-cache/index.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-textmate/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/monaco-editor-textmate/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst monaco_textmate_1 = __webpack_require__(/*! monaco-textmate */ \"./node_modules/monaco-textmate/dist/main.js\");\r\nclass TokenizerState {\r\n    constructor(_ruleStack) {\r\n        this._ruleStack = _ruleStack;\r\n    }\r\n    get ruleStack() {\r\n        return this._ruleStack;\r\n    }\r\n    clone() {\r\n        return new TokenizerState(this._ruleStack);\r\n    }\r\n    equals(other) {\r\n        if (!other ||\r\n            !(other instanceof TokenizerState) ||\r\n            other !== this ||\r\n            other._ruleStack !== this._ruleStack) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * Wires up monaco-editor with monaco-textmate\r\n *\r\n * @param monaco monaco namespace this operation should apply to (usually the `monaco` global unless you have some other setup)\r\n * @param registry TmGrammar `Registry` this wiring should rely on to provide the grammars\r\n * @param languages `Map` of language ids (string) to TM names (string)\r\n */\r\nfunction wireTmGrammars(monaco, registry, languages) {\r\n    return Promise.all(Array.from(languages.keys())\r\n        .map(async (languageId) => {\r\n        const grammar = await registry.loadGrammar(languages.get(languageId));\r\n        monaco.languages.setTokensProvider(languageId, {\r\n            getInitialState: () => new TokenizerState(monaco_textmate_1.INITIAL),\r\n            tokenize: (line, state) => {\r\n                const res = grammar.tokenizeLine(line, state.ruleStack);\r\n                return {\r\n                    endState: new TokenizerState(res.ruleStack),\r\n                    tokens: res.tokens.map(token => ({\r\n                        ...token,\r\n                        // TODO: At the moment, monaco-editor doesn't seem to accept array of scopes\r\n                        scopes: token.scopes[token.scopes.length - 1]\r\n                    })),\r\n                };\r\n            }\r\n        });\r\n    }));\r\n}\r\nexports.wireTmGrammars = wireTmGrammars;\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-editor-textmate/dist/index.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/debug.js":
/*!****************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/debug.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CAPTURE_METADATA = typeof process === 'undefined' ? false : !!process.env['VSCODE_TEXTMATE_DEBUG'];\r\nexports.IN_DEBUG_MODE = typeof process === 'undefined' ? false : !!process.env['VSCODE_TEXTMATE_DEBUG'];\r\n//# sourceMappingURL=debug.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/debug.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/grammar.js":
/*!******************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/grammar.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/monaco-textmate/dist/utils.js\");\r\nconst rule_1 = __webpack_require__(/*! ./rule */ \"./node_modules/monaco-textmate/dist/rule.js\");\r\nconst matcher_1 = __webpack_require__(/*! ./matcher */ \"./node_modules/monaco-textmate/dist/matcher.js\");\r\nconst debug_1 = __webpack_require__(/*! ./debug */ \"./node_modules/monaco-textmate/dist/debug.js\");\r\nfunction createGrammar(grammar, initialLanguage, embeddedLanguages, tokenTypes, grammarRepository) {\r\n    return new Grammar(grammar, initialLanguage, embeddedLanguages, tokenTypes, grammarRepository);\r\n}\r\nexports.createGrammar = createGrammar;\r\n/**\r\n * Fill in `result` all external included scopes in `patterns`\r\n */\r\nfunction _extractIncludedScopesInPatterns(result, patterns) {\r\n    for (let i = 0, len = patterns.length; i < len; i++) {\r\n        if (Array.isArray(patterns[i].patterns)) {\r\n            _extractIncludedScopesInPatterns(result, patterns[i].patterns);\r\n        }\r\n        let include = patterns[i].include;\r\n        if (!include) {\r\n            continue;\r\n        }\r\n        if (include === '$base' || include === '$self') {\r\n            // Special includes that can be resolved locally in this grammar\r\n            continue;\r\n        }\r\n        if (include.charAt(0) === '#') {\r\n            // Local include from this grammar\r\n            continue;\r\n        }\r\n        let sharpIndex = include.indexOf('#');\r\n        if (sharpIndex >= 0) {\r\n            result[include.substring(0, sharpIndex)] = true;\r\n        }\r\n        else {\r\n            result[include] = true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Fill in `result` all external included scopes in `repository`\r\n */\r\nfunction _extractIncludedScopesInRepository(result, repository) {\r\n    for (let name in repository) {\r\n        let rule = repository[name];\r\n        if (rule.patterns && Array.isArray(rule.patterns)) {\r\n            _extractIncludedScopesInPatterns(result, rule.patterns);\r\n        }\r\n        if (rule.repository) {\r\n            _extractIncludedScopesInRepository(result, rule.repository);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Collects the list of all external included scopes in `grammar`.\r\n */\r\nfunction collectIncludedScopes(result, grammar) {\r\n    if (grammar.patterns && Array.isArray(grammar.patterns)) {\r\n        _extractIncludedScopesInPatterns(result, grammar.patterns);\r\n    }\r\n    if (grammar.repository) {\r\n        _extractIncludedScopesInRepository(result, grammar.repository);\r\n    }\r\n    // remove references to own scope (avoid recursion)\r\n    delete result[grammar.scopeName];\r\n}\r\nexports.collectIncludedScopes = collectIncludedScopes;\r\nfunction scopesAreMatching(thisScopeName, scopeName) {\r\n    if (!thisScopeName) {\r\n        return false;\r\n    }\r\n    if (thisScopeName === scopeName) {\r\n        return true;\r\n    }\r\n    var len = scopeName.length;\r\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\r\n}\r\nfunction nameMatcher(identifers, scopes) {\r\n    if (scopes.length < identifers.length) {\r\n        return false;\r\n    }\r\n    var lastIndex = 0;\r\n    return identifers.every(identifier => {\r\n        for (var i = lastIndex; i < scopes.length; i++) {\r\n            if (scopesAreMatching(scopes[i], identifier)) {\r\n                lastIndex = i + 1;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    });\r\n}\r\n;\r\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\r\n    let matchers = matcher_1.createMatchers(selector, nameMatcher);\r\n    let ruleId = rule_1.RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\r\n    for (let matcher of matchers) {\r\n        result.push({\r\n            matcher: matcher.matcher,\r\n            ruleId: ruleId,\r\n            grammar: grammar,\r\n            priority: matcher.priority\r\n        });\r\n    }\r\n}\r\nclass ScopeMetadata {\r\n    constructor(scopeName, languageId, tokenType, themeData) {\r\n        this.scopeName = scopeName;\r\n        this.languageId = languageId;\r\n        this.tokenType = tokenType;\r\n        this.themeData = themeData;\r\n    }\r\n}\r\nexports.ScopeMetadata = ScopeMetadata;\r\nclass ScopeMetadataProvider {\r\n    constructor(initialLanguage, themeProvider, embeddedLanguages) {\r\n        this._initialLanguage = initialLanguage;\r\n        this._themeProvider = themeProvider;\r\n        this.onDidChangeTheme();\r\n        // embeddedLanguages handling\r\n        this._embeddedLanguages = Object.create(null);\r\n        if (embeddedLanguages) {\r\n            // If embeddedLanguages are configured, fill in `this._embeddedLanguages`\r\n            let scopes = Object.keys(embeddedLanguages);\r\n            for (let i = 0, len = scopes.length; i < len; i++) {\r\n                let scope = scopes[i];\r\n                let language = embeddedLanguages[scope];\r\n                if (typeof language !== 'number' || language === 0) {\r\n                    console.warn('Invalid embedded language found at scope ' + scope + ': <<' + language + '>>');\r\n                    // never hurts to be too careful\r\n                    continue;\r\n                }\r\n                this._embeddedLanguages[scope] = language;\r\n            }\r\n        }\r\n        // create the regex\r\n        let escapedScopes = Object.keys(this._embeddedLanguages).map((scopeName) => ScopeMetadataProvider._escapeRegExpCharacters(scopeName));\r\n        if (escapedScopes.length === 0) {\r\n            // no scopes registered\r\n            this._embeddedLanguagesRegex = null;\r\n        }\r\n        else {\r\n            escapedScopes.sort();\r\n            escapedScopes.reverse();\r\n            this._embeddedLanguagesRegex = new RegExp(`^((${escapedScopes.join(')|(')}))($|\\\\.)`, '');\r\n        }\r\n    }\r\n    onDidChangeTheme() {\r\n        this._cache = Object.create(null);\r\n        this._defaultMetaData = new ScopeMetadata('', this._initialLanguage, 0 /* Other */, [this._themeProvider.getDefaults()]);\r\n    }\r\n    getDefaultMetadata() {\r\n        return this._defaultMetaData;\r\n    }\r\n    /**\r\n     * Escapes regular expression characters in a given string\r\n     */\r\n    static _escapeRegExpCharacters(value) {\r\n        return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\r\n    }\r\n    getMetadataForScope(scopeName) {\r\n        if (scopeName === null) {\r\n            return ScopeMetadataProvider._NULL_SCOPE_METADATA;\r\n        }\r\n        let value = this._cache[scopeName];\r\n        if (value) {\r\n            return value;\r\n        }\r\n        value = this._doGetMetadataForScope(scopeName);\r\n        this._cache[scopeName] = value;\r\n        return value;\r\n    }\r\n    _doGetMetadataForScope(scopeName) {\r\n        let languageId = this._scopeToLanguage(scopeName);\r\n        let standardTokenType = this._toStandardTokenType(scopeName);\r\n        let themeData = this._themeProvider.themeMatch(scopeName);\r\n        return new ScopeMetadata(scopeName, languageId, standardTokenType, themeData);\r\n    }\r\n    /**\r\n     * Given a produced TM scope, return the language that token describes or null if unknown.\r\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\r\n     */\r\n    _scopeToLanguage(scope) {\r\n        if (!scope) {\r\n            return 0;\r\n        }\r\n        if (!this._embeddedLanguagesRegex) {\r\n            // no scopes registered\r\n            return 0;\r\n        }\r\n        let m = scope.match(this._embeddedLanguagesRegex);\r\n        if (!m) {\r\n            // no scopes matched\r\n            return 0;\r\n        }\r\n        let language = this._embeddedLanguages[m[1]] || 0;\r\n        if (!language) {\r\n            return 0;\r\n        }\r\n        return language;\r\n    }\r\n    _toStandardTokenType(tokenType) {\r\n        let m = tokenType.match(ScopeMetadataProvider.STANDARD_TOKEN_TYPE_REGEXP);\r\n        if (!m) {\r\n            return 0 /* Other */;\r\n        }\r\n        switch (m[1]) {\r\n            case 'comment':\r\n                return 1 /* Comment */;\r\n            case 'string':\r\n                return 2 /* String */;\r\n            case 'regex':\r\n                return 4 /* RegEx */;\r\n            case 'meta.embedded':\r\n                return 8 /* MetaEmbedded */;\r\n        }\r\n        throw new Error('Unexpected match for standard token type!');\r\n    }\r\n}\r\nScopeMetadataProvider._NULL_SCOPE_METADATA = new ScopeMetadata('', 0, 0, null);\r\nScopeMetadataProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\r\nclass Grammar {\r\n    constructor(grammar, initialLanguage, embeddedLanguages, tokenTypes, grammarRepository) {\r\n        this._scopeMetadataProvider = new ScopeMetadataProvider(initialLanguage, grammarRepository, embeddedLanguages);\r\n        this._rootId = -1;\r\n        this._lastRuleId = 0;\r\n        this._ruleId2desc = [];\r\n        this._includedGrammars = {};\r\n        this._grammarRepository = grammarRepository;\r\n        this._grammar = initGrammar(grammar, null);\r\n        this._tokenTypeMatchers = [];\r\n        if (tokenTypes) {\r\n            for (const selector of Object.keys(tokenTypes)) {\r\n                const matchers = matcher_1.createMatchers(selector, nameMatcher);\r\n                for (const matcher of matchers) {\r\n                    this._tokenTypeMatchers.push({\r\n                        matcher: matcher.matcher,\r\n                        type: tokenTypes[selector]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onDidChangeTheme() {\r\n        this._scopeMetadataProvider.onDidChangeTheme();\r\n    }\r\n    getMetadataForScope(scope) {\r\n        return this._scopeMetadataProvider.getMetadataForScope(scope);\r\n    }\r\n    getInjections() {\r\n        if (!this._injections) {\r\n            this._injections = [];\r\n            // add injections from the current grammar\r\n            var rawInjections = this._grammar.injections;\r\n            if (rawInjections) {\r\n                for (var expression in rawInjections) {\r\n                    collectInjections(this._injections, expression, rawInjections[expression], this, this._grammar);\r\n                }\r\n            }\r\n            // add injection grammars contributed for the current scope\r\n            if (this._grammarRepository) {\r\n                let injectionScopeNames = this._grammarRepository.injections(this._grammar.scopeName);\r\n                if (injectionScopeNames) {\r\n                    injectionScopeNames.forEach(injectionScopeName => {\r\n                        let injectionGrammar = this.getExternalGrammar(injectionScopeName);\r\n                        if (injectionGrammar) {\r\n                            let selector = injectionGrammar.injectionSelector;\r\n                            if (selector) {\r\n                                collectInjections(this._injections, selector, injectionGrammar, this, injectionGrammar);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            this._injections.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\r\n        }\r\n        if (this._injections.length === 0) {\r\n            return this._injections;\r\n        }\r\n        return this._injections;\r\n    }\r\n    registerRule(factory) {\r\n        let id = (++this._lastRuleId);\r\n        let result = factory(id);\r\n        this._ruleId2desc[id] = result;\r\n        return result;\r\n    }\r\n    getRule(patternId) {\r\n        return this._ruleId2desc[patternId];\r\n    }\r\n    getExternalGrammar(scopeName, repository) {\r\n        if (this._includedGrammars[scopeName]) {\r\n            return this._includedGrammars[scopeName];\r\n        }\r\n        else if (this._grammarRepository) {\r\n            let rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\r\n            if (rawIncludedGrammar) {\r\n                // console.log('LOADED GRAMMAR ' + pattern.include);\r\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\r\n                return this._includedGrammars[scopeName];\r\n            }\r\n        }\r\n    }\r\n    tokenizeLine(lineText, prevState) {\r\n        let r = this._tokenize(lineText, prevState, false);\r\n        return {\r\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\r\n            ruleStack: r.ruleStack\r\n        };\r\n    }\r\n    tokenizeLine2(lineText, prevState) {\r\n        let r = this._tokenize(lineText, prevState, true);\r\n        return {\r\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\r\n            ruleStack: r.ruleStack\r\n        };\r\n    }\r\n    _tokenize(lineText, prevState, emitBinaryTokens) {\r\n        if (this._rootId === -1) {\r\n            this._rootId = rule_1.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\r\n        }\r\n        let isFirstLine;\r\n        if (!prevState || prevState === StackElement.NULL) {\r\n            isFirstLine = true;\r\n            let rawDefaultMetadata = this._scopeMetadataProvider.getDefaultMetadata();\r\n            let defaultTheme = rawDefaultMetadata.themeData[0];\r\n            let defaultMetadata = StackElementMetadata.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, defaultTheme.fontStyle, defaultTheme.foreground, defaultTheme.background);\r\n            let rootScopeName = this.getRule(this._rootId).getName(null, null);\r\n            let rawRootMetadata = this._scopeMetadataProvider.getMetadataForScope(rootScopeName);\r\n            let rootMetadata = ScopeListElement.mergeMetadata(defaultMetadata, null, rawRootMetadata);\r\n            let scopeList = new ScopeListElement(null, rootScopeName, rootMetadata);\r\n            prevState = new StackElement(null, this._rootId, -1, null, scopeList, scopeList);\r\n        }\r\n        else {\r\n            isFirstLine = false;\r\n            prevState.reset();\r\n        }\r\n        lineText = lineText + '\\n';\r\n        let onigLineText = rule_1.createOnigString(lineText);\r\n        let lineLength = rule_1.getString(onigLineText).length;\r\n        let lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers);\r\n        let nextState = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens);\r\n        return {\r\n            lineLength: lineLength,\r\n            lineTokens: lineTokens,\r\n            ruleStack: nextState\r\n        };\r\n    }\r\n}\r\nexports.Grammar = Grammar;\r\nfunction initGrammar(grammar, base) {\r\n    grammar = utils_1.clone(grammar);\r\n    grammar.repository = grammar.repository || {};\r\n    grammar.repository.$self = {\r\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\r\n        patterns: grammar.patterns,\r\n        name: grammar.scopeName\r\n    };\r\n    grammar.repository.$base = base || grammar.repository.$self;\r\n    return grammar;\r\n}\r\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\r\n    if (captures.length === 0) {\r\n        return;\r\n    }\r\n    let len = Math.min(captures.length, captureIndices.length);\r\n    let localStack = [];\r\n    let maxEnd = captureIndices[0].end;\r\n    for (let i = 0; i < len; i++) {\r\n        let captureRule = captures[i];\r\n        if (captureRule === null) {\r\n            // Not interested\r\n            continue;\r\n        }\r\n        let captureIndex = captureIndices[i];\r\n        if (captureIndex.length === 0) {\r\n            // Nothing really captured\r\n            continue;\r\n        }\r\n        if (captureIndex.start > maxEnd) {\r\n            // Capture going beyond consumed string\r\n            break;\r\n        }\r\n        // pop captures while needed\r\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\r\n            // pop!\r\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\r\n            localStack.pop();\r\n        }\r\n        if (localStack.length > 0) {\r\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\r\n        }\r\n        else {\r\n            lineTokens.produce(stack, captureIndex.start);\r\n        }\r\n        if (captureRule.retokenizeCapturedWithRuleId) {\r\n            // the capture requires additional matching\r\n            let scopeName = captureRule.getName(rule_1.getString(lineText), captureIndices);\r\n            let nameScopesList = stack.contentNameScopesList.push(grammar, scopeName);\r\n            let contentName = captureRule.getContentName(rule_1.getString(lineText), captureIndices);\r\n            let contentNameScopesList = nameScopesList.push(grammar, contentName);\r\n            let stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, null, nameScopesList, contentNameScopesList);\r\n            _tokenizeString(grammar, rule_1.createOnigString(rule_1.getString(lineText).substring(0, captureIndex.end)), (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens);\r\n            continue;\r\n        }\r\n        let captureRuleScopeName = captureRule.getName(rule_1.getString(lineText), captureIndices);\r\n        if (captureRuleScopeName !== null) {\r\n            // push\r\n            let base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\r\n            let captureRuleScopesList = base.push(grammar, captureRuleScopeName);\r\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\r\n        }\r\n    }\r\n    while (localStack.length > 0) {\r\n        // pop!\r\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\r\n        localStack.pop();\r\n    }\r\n}\r\nfunction debugCompiledRuleToString(ruleScanner) {\r\n    let r = [];\r\n    for (let i = 0, len = ruleScanner.rules.length; i < len; i++) {\r\n        r.push('   - ' + ruleScanner.rules[i] + ': ' + ruleScanner.debugRegExps[i]);\r\n    }\r\n    return r.join('\\n');\r\n}\r\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\r\n    // The lower the better\r\n    let bestMatchRating = Number.MAX_VALUE;\r\n    let bestMatchCaptureIndices = null;\r\n    let bestMatchRuleId;\r\n    let bestMatchResultPriority = 0;\r\n    let scopes = stack.contentNameScopesList.generateScopes();\r\n    for (let i = 0, len = injections.length; i < len; i++) {\r\n        let injection = injections[i];\r\n        if (!injection.matcher(scopes)) {\r\n            // injection selector doesn't match stack\r\n            continue;\r\n        }\r\n        let ruleScanner = grammar.getRule(injection.ruleId).compile(grammar, null, isFirstLine, linePos === anchorPosition);\r\n        let matchResult = ruleScanner.scanner.findNextMatchSync(lineText, linePos);\r\n        if (debug_1.IN_DEBUG_MODE) {\r\n            console.log('  scanning for injections');\r\n            console.log(debugCompiledRuleToString(ruleScanner));\r\n        }\r\n        if (!matchResult) {\r\n            continue;\r\n        }\r\n        let matchRating = matchResult.captureIndices[0].start;\r\n        if (matchRating >= bestMatchRating) {\r\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\r\n            continue;\r\n        }\r\n        bestMatchRating = matchRating;\r\n        bestMatchCaptureIndices = matchResult.captureIndices;\r\n        bestMatchRuleId = ruleScanner.rules[matchResult.index];\r\n        bestMatchResultPriority = injection.priority;\r\n        if (bestMatchRating === linePos) {\r\n            // No more need to look at the rest of the injections.\r\n            break;\r\n        }\r\n    }\r\n    if (bestMatchCaptureIndices) {\r\n        return {\r\n            priorityMatch: bestMatchResultPriority === -1,\r\n            captureIndices: bestMatchCaptureIndices,\r\n            matchedRuleId: bestMatchRuleId\r\n        };\r\n    }\r\n    return null;\r\n}\r\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\r\n    let rule = stack.getRule(grammar);\r\n    let ruleScanner = rule.compile(grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\r\n    let r = ruleScanner.scanner.findNextMatchSync(lineText, linePos);\r\n    if (debug_1.IN_DEBUG_MODE) {\r\n        console.log('  scanning for');\r\n        console.log(debugCompiledRuleToString(ruleScanner));\r\n    }\r\n    if (r) {\r\n        return {\r\n            captureIndices: r.captureIndices,\r\n            matchedRuleId: ruleScanner.rules[r.index]\r\n        };\r\n    }\r\n    return null;\r\n}\r\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\r\n    // Look for normal grammar rule\r\n    let matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\r\n    // Look for injected rules\r\n    let injections = grammar.getInjections();\r\n    if (injections.length === 0) {\r\n        // No injections whatsoever => early return\r\n        return matchResult;\r\n    }\r\n    let injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\r\n    if (!injectionResult) {\r\n        // No injections matched => early return\r\n        return matchResult;\r\n    }\r\n    if (!matchResult) {\r\n        // Only injections matched => early return\r\n        return injectionResult;\r\n    }\r\n    // Decide if `matchResult` or `injectionResult` should win\r\n    let matchResultScore = matchResult.captureIndices[0].start;\r\n    let injectionResultScore = injectionResult.captureIndices[0].start;\r\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\r\n        // injection won!\r\n        return injectionResult;\r\n    }\r\n    return matchResult;\r\n}\r\n/**\r\n * Walk the stack from bottom to top, and check each while condition in this order.\r\n * If any fails, cut off the entire stack above the failed while condition. While conditions\r\n * may also advance the linePosition.\r\n */\r\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\r\n    let anchorPosition = -1;\r\n    let whileRules = [];\r\n    for (let node = stack; node; node = node.pop()) {\r\n        let nodeRule = node.getRule(grammar);\r\n        if (nodeRule instanceof rule_1.BeginWhileRule) {\r\n            whileRules.push({\r\n                rule: nodeRule,\r\n                stack: node\r\n            });\r\n        }\r\n    }\r\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\r\n        let ruleScanner = whileRule.rule.compileWhile(grammar, whileRule.stack.endRule, isFirstLine, anchorPosition === linePos);\r\n        let r = ruleScanner.scanner.findNextMatchSync(lineText, linePos);\r\n        if (debug_1.IN_DEBUG_MODE) {\r\n            console.log('  scanning for while rule');\r\n            console.log(debugCompiledRuleToString(ruleScanner));\r\n        }\r\n        if (r) {\r\n            let matchedRuleId = ruleScanner.rules[r.index];\r\n            if (matchedRuleId !== -2) {\r\n                // we shouldn't end up here\r\n                stack = whileRule.stack.pop();\r\n                break;\r\n            }\r\n            if (r.captureIndices && r.captureIndices.length) {\r\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\r\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\r\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\r\n                anchorPosition = r.captureIndices[0].end;\r\n                if (r.captureIndices[0].end > linePos) {\r\n                    linePos = r.captureIndices[0].end;\r\n                    isFirstLine = false;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            stack = whileRule.stack.pop();\r\n            break;\r\n        }\r\n    }\r\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\r\n}\r\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\r\n    const lineLength = rule_1.getString(lineText).length;\r\n    let STOP = false;\r\n    let whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\r\n    stack = whileCheckResult.stack;\r\n    linePos = whileCheckResult.linePos;\r\n    isFirstLine = whileCheckResult.isFirstLine;\r\n    let anchorPosition = whileCheckResult.anchorPosition;\r\n    while (!STOP) {\r\n        scanNext(); // potentially modifies linePos && anchorPosition\r\n    }\r\n    function scanNext() {\r\n        if (debug_1.IN_DEBUG_MODE) {\r\n            console.log('');\r\n            console.log('@@scanNext: |' + rule_1.getString(lineText).replace(/\\n$/, '\\\\n').substr(linePos) + '|');\r\n        }\r\n        let r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\r\n        if (!r) {\r\n            if (debug_1.IN_DEBUG_MODE) {\r\n                console.log('  no more matches.');\r\n            }\r\n            // No match\r\n            lineTokens.produce(stack, lineLength);\r\n            STOP = true;\r\n            return;\r\n        }\r\n        let captureIndices = r.captureIndices;\r\n        let matchedRuleId = r.matchedRuleId;\r\n        let hasAdvanced = (captureIndices && captureIndices.length > 0) ? (captureIndices[0].end > linePos) : false;\r\n        if (matchedRuleId === -1) {\r\n            // We matched the `end` for this rule => pop it\r\n            let poppedRule = stack.getRule(grammar);\r\n            if (debug_1.IN_DEBUG_MODE) {\r\n                console.log('  popping ' + poppedRule.debugName + ' - ' + poppedRule.debugEndRegExp);\r\n            }\r\n            lineTokens.produce(stack, captureIndices[0].start);\r\n            stack = stack.setContentNameScopesList(stack.nameScopesList);\r\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\r\n            lineTokens.produce(stack, captureIndices[0].end);\r\n            // pop\r\n            let popped = stack;\r\n            stack = stack.pop();\r\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\r\n                // Grammar pushed & popped a rule without advancing\r\n                console.error('[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing');\r\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\r\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\r\n                stack = popped;\r\n                lineTokens.produce(stack, lineLength);\r\n                STOP = true;\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // We matched a rule!\r\n            let _rule = grammar.getRule(matchedRuleId);\r\n            lineTokens.produce(stack, captureIndices[0].start);\r\n            let beforePush = stack;\r\n            // push it on the stack rule\r\n            let scopeName = _rule.getName(rule_1.getString(lineText), captureIndices);\r\n            let nameScopesList = stack.contentNameScopesList.push(grammar, scopeName);\r\n            stack = stack.push(matchedRuleId, linePos, null, nameScopesList, nameScopesList);\r\n            if (_rule instanceof rule_1.BeginEndRule) {\r\n                let pushedRule = _rule;\r\n                if (debug_1.IN_DEBUG_MODE) {\r\n                    console.log('  pushing ' + pushedRule.debugName + ' - ' + pushedRule.debugBeginRegExp);\r\n                }\r\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\r\n                lineTokens.produce(stack, captureIndices[0].end);\r\n                anchorPosition = captureIndices[0].end;\r\n                let contentName = pushedRule.getContentName(rule_1.getString(lineText), captureIndices);\r\n                let contentNameScopesList = nameScopesList.push(grammar, contentName);\r\n                stack = stack.setContentNameScopesList(contentNameScopesList);\r\n                if (pushedRule.endHasBackReferences) {\r\n                    stack = stack.setEndRule(pushedRule.getEndWithResolvedBackReferences(rule_1.getString(lineText), captureIndices));\r\n                }\r\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\r\n                    // Grammar pushed the same rule without advancing\r\n                    console.error('[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing');\r\n                    stack = stack.pop();\r\n                    lineTokens.produce(stack, lineLength);\r\n                    STOP = true;\r\n                    return;\r\n                }\r\n            }\r\n            else if (_rule instanceof rule_1.BeginWhileRule) {\r\n                let pushedRule = _rule;\r\n                if (debug_1.IN_DEBUG_MODE) {\r\n                    console.log('  pushing ' + pushedRule.debugName);\r\n                }\r\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\r\n                lineTokens.produce(stack, captureIndices[0].end);\r\n                anchorPosition = captureIndices[0].end;\r\n                let contentName = pushedRule.getContentName(rule_1.getString(lineText), captureIndices);\r\n                let contentNameScopesList = nameScopesList.push(grammar, contentName);\r\n                stack = stack.setContentNameScopesList(contentNameScopesList);\r\n                if (pushedRule.whileHasBackReferences) {\r\n                    stack = stack.setEndRule(pushedRule.getWhileWithResolvedBackReferences(rule_1.getString(lineText), captureIndices));\r\n                }\r\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\r\n                    // Grammar pushed the same rule without advancing\r\n                    console.error('[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing');\r\n                    stack = stack.pop();\r\n                    lineTokens.produce(stack, lineLength);\r\n                    STOP = true;\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                let matchingRule = _rule;\r\n                if (debug_1.IN_DEBUG_MODE) {\r\n                    console.log('  matched ' + matchingRule.debugName + ' - ' + matchingRule.debugMatchRegExp);\r\n                }\r\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\r\n                lineTokens.produce(stack, captureIndices[0].end);\r\n                // pop rule immediately since it is a MatchRule\r\n                stack = stack.pop();\r\n                if (!hasAdvanced) {\r\n                    // Grammar is not advancing, nor is it pushing/popping\r\n                    console.error('[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping');\r\n                    stack = stack.safePop();\r\n                    lineTokens.produce(stack, lineLength);\r\n                    STOP = true;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (captureIndices[0].end > linePos) {\r\n            // Advance stream\r\n            linePos = captureIndices[0].end;\r\n            isFirstLine = false;\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nclass StackElementMetadata {\r\n    static toBinaryStr(metadata) {\r\n        let r = metadata.toString(2);\r\n        while (r.length < 32) {\r\n            r = '0' + r;\r\n        }\r\n        return r;\r\n    }\r\n    static printMetadata(metadata) {\r\n        let languageId = StackElementMetadata.getLanguageId(metadata);\r\n        let tokenType = StackElementMetadata.getTokenType(metadata);\r\n        let fontStyle = StackElementMetadata.getFontStyle(metadata);\r\n        let foreground = StackElementMetadata.getForeground(metadata);\r\n        let background = StackElementMetadata.getBackground(metadata);\r\n        console.log({\r\n            languageId: languageId,\r\n            tokenType: tokenType,\r\n            fontStyle: fontStyle,\r\n            foreground: foreground,\r\n            background: background,\r\n        });\r\n    }\r\n    static getLanguageId(metadata) {\r\n        return (metadata & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\r\n    }\r\n    static getTokenType(metadata) {\r\n        return (metadata & 1792 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\r\n    }\r\n    static getFontStyle(metadata) {\r\n        return (metadata & 14336 /* FONT_STYLE_MASK */) >>> 11 /* FONT_STYLE_OFFSET */;\r\n    }\r\n    static getForeground(metadata) {\r\n        return (metadata & 8372224 /* FOREGROUND_MASK */) >>> 14 /* FOREGROUND_OFFSET */;\r\n    }\r\n    static getBackground(metadata) {\r\n        return (metadata & 4286578688 /* BACKGROUND_MASK */) >>> 23 /* BACKGROUND_OFFSET */;\r\n    }\r\n    static set(metadata, languageId, tokenType, fontStyle, foreground, background) {\r\n        let _languageId = StackElementMetadata.getLanguageId(metadata);\r\n        let _tokenType = StackElementMetadata.getTokenType(metadata);\r\n        let _fontStyle = StackElementMetadata.getFontStyle(metadata);\r\n        let _foreground = StackElementMetadata.getForeground(metadata);\r\n        let _background = StackElementMetadata.getBackground(metadata);\r\n        if (languageId !== 0) {\r\n            _languageId = languageId;\r\n        }\r\n        if (tokenType !== 0 /* Other */) {\r\n            _tokenType = tokenType === 8 /* MetaEmbedded */ ? 0 /* Other */ : tokenType;\r\n        }\r\n        if (fontStyle !== -1 /* NotSet */) {\r\n            _fontStyle = fontStyle;\r\n        }\r\n        if (foreground !== 0) {\r\n            _foreground = foreground;\r\n        }\r\n        if (background !== 0) {\r\n            _background = background;\r\n        }\r\n        return ((_languageId << 0 /* LANGUAGEID_OFFSET */)\r\n            | (_tokenType << 8 /* TOKEN_TYPE_OFFSET */)\r\n            | (_fontStyle << 11 /* FONT_STYLE_OFFSET */)\r\n            | (_foreground << 14 /* FOREGROUND_OFFSET */)\r\n            | (_background << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    }\r\n}\r\nexports.StackElementMetadata = StackElementMetadata;\r\nclass ScopeListElement {\r\n    constructor(parent, scope, metadata) {\r\n        this.parent = parent;\r\n        this.scope = scope;\r\n        this.metadata = metadata;\r\n    }\r\n    static _equals(a, b) {\r\n        do {\r\n            if (a === b) {\r\n                return true;\r\n            }\r\n            if (a.scope !== b.scope || a.metadata !== b.metadata) {\r\n                return false;\r\n            }\r\n            // Go to previous pair\r\n            a = a.parent;\r\n            b = b.parent;\r\n            if (!a && !b) {\r\n                // End of list reached for both\r\n                return true;\r\n            }\r\n            if (!a || !b) {\r\n                // End of list reached only for one\r\n                return false;\r\n            }\r\n        } while (true);\r\n    }\r\n    equals(other) {\r\n        return ScopeListElement._equals(this, other);\r\n    }\r\n    static _matchesScope(scope, selector, selectorWithDot) {\r\n        return (selector === scope || scope.substring(0, selectorWithDot.length) === selectorWithDot);\r\n    }\r\n    static _matches(target, parentScopes) {\r\n        if (parentScopes === null) {\r\n            return true;\r\n        }\r\n        let len = parentScopes.length;\r\n        let index = 0;\r\n        let selector = parentScopes[index];\r\n        let selectorWithDot = selector + '.';\r\n        while (target) {\r\n            if (this._matchesScope(target.scope, selector, selectorWithDot)) {\r\n                index++;\r\n                if (index === len) {\r\n                    return true;\r\n                }\r\n                selector = parentScopes[index];\r\n                selectorWithDot = selector + '.';\r\n            }\r\n            target = target.parent;\r\n        }\r\n        return false;\r\n    }\r\n    static mergeMetadata(metadata, scopesList, source) {\r\n        if (source === null) {\r\n            return metadata;\r\n        }\r\n        let fontStyle = -1 /* NotSet */;\r\n        let foreground = 0;\r\n        let background = 0;\r\n        if (source.themeData !== null) {\r\n            // Find the first themeData that matches\r\n            for (let i = 0, len = source.themeData.length; i < len; i++) {\r\n                let themeData = source.themeData[i];\r\n                if (this._matches(scopesList, themeData.parentScopes)) {\r\n                    fontStyle = themeData.fontStyle;\r\n                    foreground = themeData.foreground;\r\n                    background = themeData.background;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return StackElementMetadata.set(metadata, source.languageId, source.tokenType, fontStyle, foreground, background);\r\n    }\r\n    static _push(target, grammar, scopes) {\r\n        for (let i = 0, len = scopes.length; i < len; i++) {\r\n            let scope = scopes[i];\r\n            let rawMetadata = grammar.getMetadataForScope(scope);\r\n            let metadata = ScopeListElement.mergeMetadata(target.metadata, target, rawMetadata);\r\n            target = new ScopeListElement(target, scope, metadata);\r\n        }\r\n        return target;\r\n    }\r\n    push(grammar, scope) {\r\n        if (scope === null) {\r\n            return this;\r\n        }\r\n        if (scope.indexOf(' ') >= 0) {\r\n            // there are multiple scopes to push\r\n            return ScopeListElement._push(this, grammar, scope.split(/ /g));\r\n        }\r\n        // there is a single scope to push\r\n        return ScopeListElement._push(this, grammar, [scope]);\r\n    }\r\n    static _generateScopes(scopesList) {\r\n        let result = [], resultLen = 0;\r\n        while (scopesList) {\r\n            result[resultLen++] = scopesList.scope;\r\n            scopesList = scopesList.parent;\r\n        }\r\n        result.reverse();\r\n        return result;\r\n    }\r\n    generateScopes() {\r\n        return ScopeListElement._generateScopes(this);\r\n    }\r\n}\r\nexports.ScopeListElement = ScopeListElement;\r\n/**\r\n * Represents a \"pushed\" state on the stack (as a linked list element).\r\n */\r\nclass StackElement {\r\n    constructor(parent, ruleId, enterPos, endRule, nameScopesList, contentNameScopesList) {\r\n        this.parent = parent;\r\n        this.depth = (this.parent ? this.parent.depth + 1 : 1);\r\n        this.ruleId = ruleId;\r\n        this._enterPos = enterPos;\r\n        this.endRule = endRule;\r\n        this.nameScopesList = nameScopesList;\r\n        this.contentNameScopesList = contentNameScopesList;\r\n    }\r\n    /**\r\n     * A structural equals check. Does not take into account `scopes`.\r\n     */\r\n    static _structuralEquals(a, b) {\r\n        do {\r\n            if (a === b) {\r\n                return true;\r\n            }\r\n            if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\r\n                return false;\r\n            }\r\n            // Go to previous pair\r\n            a = a.parent;\r\n            b = b.parent;\r\n            if (!a && !b) {\r\n                // End of list reached for both\r\n                return true;\r\n            }\r\n            if (!a || !b) {\r\n                // End of list reached only for one\r\n                return false;\r\n            }\r\n        } while (true);\r\n    }\r\n    static _equals(a, b) {\r\n        if (a === b) {\r\n            return true;\r\n        }\r\n        if (!this._structuralEquals(a, b)) {\r\n            return false;\r\n        }\r\n        return a.contentNameScopesList.equals(b.contentNameScopesList);\r\n    }\r\n    clone() {\r\n        return this;\r\n    }\r\n    equals(other) {\r\n        if (other === null) {\r\n            return false;\r\n        }\r\n        return StackElement._equals(this, other);\r\n    }\r\n    static _reset(el) {\r\n        while (el) {\r\n            el._enterPos = -1;\r\n            el = el.parent;\r\n        }\r\n    }\r\n    reset() {\r\n        StackElement._reset(this);\r\n    }\r\n    pop() {\r\n        return this.parent;\r\n    }\r\n    safePop() {\r\n        if (this.parent) {\r\n            return this.parent;\r\n        }\r\n        return this;\r\n    }\r\n    push(ruleId, enterPos, endRule, nameScopesList, contentNameScopesList) {\r\n        return new StackElement(this, ruleId, enterPos, endRule, nameScopesList, contentNameScopesList);\r\n    }\r\n    getEnterPos() {\r\n        return this._enterPos;\r\n    }\r\n    getRule(grammar) {\r\n        return grammar.getRule(this.ruleId);\r\n    }\r\n    _writeString(res, outIndex) {\r\n        if (this.parent) {\r\n            outIndex = this.parent._writeString(res, outIndex);\r\n        }\r\n        res[outIndex++] = `(${this.ruleId}, TODO-${this.nameScopesList}, TODO-${this.contentNameScopesList})`;\r\n        return outIndex;\r\n    }\r\n    toString() {\r\n        let r = [];\r\n        this._writeString(r, 0);\r\n        return '[' + r.join(',') + ']';\r\n    }\r\n    setContentNameScopesList(contentNameScopesList) {\r\n        if (this.contentNameScopesList === contentNameScopesList) {\r\n            return this;\r\n        }\r\n        return this.parent.push(this.ruleId, this._enterPos, this.endRule, this.nameScopesList, contentNameScopesList);\r\n    }\r\n    setEndRule(endRule) {\r\n        if (this.endRule === endRule) {\r\n            return this;\r\n        }\r\n        return new StackElement(this.parent, this.ruleId, this._enterPos, endRule, this.nameScopesList, this.contentNameScopesList);\r\n    }\r\n    hasSameRuleAs(other) {\r\n        return this.ruleId === other.ruleId;\r\n    }\r\n}\r\nStackElement.NULL = new StackElement(null, 0, 0, null, null, null);\r\nexports.StackElement = StackElement;\r\nclass LocalStackElement {\r\n    constructor(scopes, endPos) {\r\n        this.scopes = scopes;\r\n        this.endPos = endPos;\r\n    }\r\n}\r\nexports.LocalStackElement = LocalStackElement;\r\nclass LineTokens {\r\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides) {\r\n        this._emitBinaryTokens = emitBinaryTokens;\r\n        this._tokenTypeOverrides = tokenTypeOverrides;\r\n        if (debug_1.IN_DEBUG_MODE) {\r\n            this._lineText = lineText;\r\n        }\r\n        if (this._emitBinaryTokens) {\r\n            this._binaryTokens = [];\r\n        }\r\n        else {\r\n            this._tokens = [];\r\n        }\r\n        this._lastTokenEndIndex = 0;\r\n    }\r\n    produce(stack, endIndex) {\r\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\r\n    }\r\n    produceFromScopes(scopesList, endIndex) {\r\n        if (this._lastTokenEndIndex >= endIndex) {\r\n            return;\r\n        }\r\n        if (this._emitBinaryTokens) {\r\n            let metadata = scopesList.metadata;\r\n            for (const tokenType of this._tokenTypeOverrides) {\r\n                if (tokenType.matcher(scopesList.generateScopes())) {\r\n                    metadata = StackElementMetadata.set(metadata, 0, toTemporaryType(tokenType.type), -1 /* NotSet */, 0, 0);\r\n                }\r\n            }\r\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\r\n                // no need to push a token with the same metadata\r\n                this._lastTokenEndIndex = endIndex;\r\n                return;\r\n            }\r\n            this._binaryTokens.push(this._lastTokenEndIndex);\r\n            this._binaryTokens.push(metadata);\r\n            this._lastTokenEndIndex = endIndex;\r\n            return;\r\n        }\r\n        let scopes = scopesList.generateScopes();\r\n        if (debug_1.IN_DEBUG_MODE) {\r\n            console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\r\n            for (var k = 0; k < scopes.length; k++) {\r\n                console.log('      * ' + scopes[k]);\r\n            }\r\n        }\r\n        this._tokens.push({\r\n            startIndex: this._lastTokenEndIndex,\r\n            endIndex: endIndex,\r\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\r\n            scopes: scopes\r\n        });\r\n        this._lastTokenEndIndex = endIndex;\r\n    }\r\n    getResult(stack, lineLength) {\r\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\r\n            // pop produced token for newline\r\n            this._tokens.pop();\r\n        }\r\n        if (this._tokens.length === 0) {\r\n            this._lastTokenEndIndex = -1;\r\n            this.produce(stack, lineLength);\r\n            this._tokens[this._tokens.length - 1].startIndex = 0;\r\n        }\r\n        return this._tokens;\r\n    }\r\n    getBinaryResult(stack, lineLength) {\r\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\r\n            // pop produced token for newline\r\n            this._binaryTokens.pop();\r\n            this._binaryTokens.pop();\r\n        }\r\n        if (this._binaryTokens.length === 0) {\r\n            this._lastTokenEndIndex = -1;\r\n            this.produce(stack, lineLength);\r\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\r\n        }\r\n        let result = new Uint32Array(this._binaryTokens.length);\r\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\r\n            result[i] = this._binaryTokens[i];\r\n        }\r\n        return result;\r\n    }\r\n}\r\nfunction toTemporaryType(standardType) {\r\n    switch (standardType) {\r\n        case 4 /* RegEx */:\r\n            return 4 /* RegEx */;\r\n        case 2 /* String */:\r\n            return 2 /* String */;\r\n        case 1 /* Comment */:\r\n            return 1 /* Comment */;\r\n        case 0 /* Other */:\r\n        default:\r\n            // `MetaEmbedded` is the same scope as `Other`\r\n            // but it overwrites existing token types in the stack.\r\n            return 8 /* MetaEmbedded */;\r\n    }\r\n}\r\n//# sourceMappingURL=grammar.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/grammar.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/grammarReader.js":
/*!************************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/grammarReader.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plist = __webpack_require__(/*! fast-plist */ \"./node_modules/fast-plist/release/src/main.js\");\r\nconst debug_1 = __webpack_require__(/*! ./debug */ \"./node_modules/monaco-textmate/dist/debug.js\");\r\nconst json_1 = __webpack_require__(/*! ./json */ \"./node_modules/monaco-textmate/dist/json.js\");\r\nfunction parseJSONGrammar(contents, filename) {\r\n    if (debug_1.CAPTURE_METADATA) {\r\n        return json_1.parse(contents, filename, true);\r\n    }\r\n    return JSON.parse(contents);\r\n}\r\nexports.parseJSONGrammar = parseJSONGrammar;\r\nfunction parsePLISTGrammar(contents, filename) {\r\n    if (debug_1.CAPTURE_METADATA) {\r\n        return plist.parseWithLocation(contents, filename, '$vscodeTextmateLocation');\r\n    }\r\n    return plist.parse(contents);\r\n}\r\nexports.parsePLISTGrammar = parsePLISTGrammar;\r\n//# sourceMappingURL=grammarReader.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/grammarReader.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/json.js":
/*!***************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/json.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction doFail(streamState, msg) {\r\n    // console.log('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\r\n    throw new Error('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\r\n}\r\nfunction parse(source, filename, withMetadata) {\r\n    let streamState = new JSONStreamState(source);\r\n    let token = new JSONToken();\r\n    let state = 0 /* ROOT_STATE */;\r\n    let cur = null;\r\n    let stateStack = [];\r\n    let objStack = [];\r\n    function pushState() {\r\n        stateStack.push(state);\r\n        objStack.push(cur);\r\n    }\r\n    function popState() {\r\n        state = stateStack.pop();\r\n        cur = objStack.pop();\r\n    }\r\n    function fail(msg) {\r\n        doFail(streamState, msg);\r\n    }\r\n    while (nextJSONToken(streamState, token)) {\r\n        if (state === 0 /* ROOT_STATE */) {\r\n            if (cur !== null) {\r\n                fail('too many constructs in root');\r\n            }\r\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\r\n                cur = {};\r\n                if (withMetadata) {\r\n                    cur.$vscodeTextmateLocation = token.toLocation(filename);\r\n                }\r\n                pushState();\r\n                state = 1 /* DICT_STATE */;\r\n                continue;\r\n            }\r\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\r\n                cur = [];\r\n                pushState();\r\n                state = 4 /* ARR_STATE */;\r\n                continue;\r\n            }\r\n            fail('unexpected token in root');\r\n        }\r\n        if (state === 2 /* DICT_STATE_COMMA */) {\r\n            if (token.type === 5 /* RIGHT_CURLY_BRACKET */) {\r\n                popState();\r\n                continue;\r\n            }\r\n            if (token.type === 7 /* COMMA */) {\r\n                state = 3 /* DICT_STATE_NO_CLOSE */;\r\n                continue;\r\n            }\r\n            fail('expected , or }');\r\n        }\r\n        if (state === 1 /* DICT_STATE */ || state === 3 /* DICT_STATE_NO_CLOSE */) {\r\n            if (state === 1 /* DICT_STATE */ && token.type === 5 /* RIGHT_CURLY_BRACKET */) {\r\n                popState();\r\n                continue;\r\n            }\r\n            if (token.type === 1 /* STRING */) {\r\n                let keyValue = token.value;\r\n                if (!nextJSONToken(streamState, token) || token.type !== 6 /* COLON */) {\r\n                    fail('expected colon');\r\n                }\r\n                if (!nextJSONToken(streamState, token)) {\r\n                    fail('expected value');\r\n                }\r\n                state = 2 /* DICT_STATE_COMMA */;\r\n                if (token.type === 1 /* STRING */) {\r\n                    cur[keyValue] = token.value;\r\n                    continue;\r\n                }\r\n                if (token.type === 8 /* NULL */) {\r\n                    cur[keyValue] = null;\r\n                    continue;\r\n                }\r\n                if (token.type === 9 /* TRUE */) {\r\n                    cur[keyValue] = true;\r\n                    continue;\r\n                }\r\n                if (token.type === 10 /* FALSE */) {\r\n                    cur[keyValue] = false;\r\n                    continue;\r\n                }\r\n                if (token.type === 11 /* NUMBER */) {\r\n                    cur[keyValue] = parseFloat(token.value);\r\n                    continue;\r\n                }\r\n                if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\r\n                    let newArr = [];\r\n                    cur[keyValue] = newArr;\r\n                    pushState();\r\n                    state = 4 /* ARR_STATE */;\r\n                    cur = newArr;\r\n                    continue;\r\n                }\r\n                if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\r\n                    let newDict = {};\r\n                    if (withMetadata) {\r\n                        newDict.$vscodeTextmateLocation = token.toLocation(filename);\r\n                    }\r\n                    cur[keyValue] = newDict;\r\n                    pushState();\r\n                    state = 1 /* DICT_STATE */;\r\n                    cur = newDict;\r\n                    continue;\r\n                }\r\n            }\r\n            fail('unexpected token in dict');\r\n        }\r\n        if (state === 5 /* ARR_STATE_COMMA */) {\r\n            if (token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\r\n                popState();\r\n                continue;\r\n            }\r\n            if (token.type === 7 /* COMMA */) {\r\n                state = 6 /* ARR_STATE_NO_CLOSE */;\r\n                continue;\r\n            }\r\n            fail('expected , or ]');\r\n        }\r\n        if (state === 4 /* ARR_STATE */ || state === 6 /* ARR_STATE_NO_CLOSE */) {\r\n            if (state === 4 /* ARR_STATE */ && token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\r\n                popState();\r\n                continue;\r\n            }\r\n            state = 5 /* ARR_STATE_COMMA */;\r\n            if (token.type === 1 /* STRING */) {\r\n                cur.push(token.value);\r\n                continue;\r\n            }\r\n            if (token.type === 8 /* NULL */) {\r\n                cur.push(null);\r\n                continue;\r\n            }\r\n            if (token.type === 9 /* TRUE */) {\r\n                cur.push(true);\r\n                continue;\r\n            }\r\n            if (token.type === 10 /* FALSE */) {\r\n                cur.push(false);\r\n                continue;\r\n            }\r\n            if (token.type === 11 /* NUMBER */) {\r\n                cur.push(parseFloat(token.value));\r\n                continue;\r\n            }\r\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\r\n                let newArr = [];\r\n                cur.push(newArr);\r\n                pushState();\r\n                state = 4 /* ARR_STATE */;\r\n                cur = newArr;\r\n                continue;\r\n            }\r\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\r\n                let newDict = {};\r\n                if (withMetadata) {\r\n                    newDict.$vscodeTextmateLocation = token.toLocation(filename);\r\n                }\r\n                cur.push(newDict);\r\n                pushState();\r\n                state = 1 /* DICT_STATE */;\r\n                cur = newDict;\r\n                continue;\r\n            }\r\n            fail('unexpected token in array');\r\n        }\r\n        fail('unknown state');\r\n    }\r\n    if (objStack.length !== 0) {\r\n        fail('unclosed constructs');\r\n    }\r\n    return cur;\r\n}\r\nexports.parse = parse;\r\nclass JSONStreamState {\r\n    constructor(source) {\r\n        this.source = source;\r\n        this.pos = 0;\r\n        this.len = source.length;\r\n        this.line = 1;\r\n        this.char = 0;\r\n    }\r\n}\r\nclass JSONToken {\r\n    constructor() {\r\n        this.value = null;\r\n        this.offset = -1;\r\n        this.len = -1;\r\n        this.line = -1;\r\n        this.char = -1;\r\n    }\r\n    toLocation(filename) {\r\n        return {\r\n            filename: filename,\r\n            line: this.line,\r\n            char: this.char\r\n        };\r\n    }\r\n}\r\n/**\r\n * precondition: the string is known to be valid JSON (https://www.ietf.org/rfc/rfc4627.txt)\r\n */\r\nfunction nextJSONToken(_state, _out) {\r\n    _out.value = null;\r\n    _out.type = 0 /* UNKNOWN */;\r\n    _out.offset = -1;\r\n    _out.len = -1;\r\n    _out.line = -1;\r\n    _out.char = -1;\r\n    let source = _state.source;\r\n    let pos = _state.pos;\r\n    let len = _state.len;\r\n    let line = _state.line;\r\n    let char = _state.char;\r\n    //------------------------ skip whitespace\r\n    let chCode;\r\n    do {\r\n        if (pos >= len) {\r\n            return false; /*EOS*/\r\n        }\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode === 32 /* SPACE */ || chCode === 9 /* HORIZONTAL_TAB */ || chCode === 13 /* CARRIAGE_RETURN */) {\r\n            // regular whitespace\r\n            pos++;\r\n            char++;\r\n            continue;\r\n        }\r\n        if (chCode === 10 /* LINE_FEED */) {\r\n            // newline\r\n            pos++;\r\n            line++;\r\n            char = 0;\r\n            continue;\r\n        }\r\n        // not whitespace\r\n        break;\r\n    } while (true);\r\n    _out.offset = pos;\r\n    _out.line = line;\r\n    _out.char = char;\r\n    if (chCode === 34 /* QUOTATION_MARK */) {\r\n        //------------------------ strings\r\n        _out.type = 1 /* STRING */;\r\n        pos++;\r\n        char++;\r\n        do {\r\n            if (pos >= len) {\r\n                return false; /*EOS*/\r\n            }\r\n            chCode = source.charCodeAt(pos);\r\n            pos++;\r\n            char++;\r\n            if (chCode === 92 /* BACKSLASH */) {\r\n                // skip next char\r\n                pos++;\r\n                char++;\r\n                continue;\r\n            }\r\n            if (chCode === 34 /* QUOTATION_MARK */) {\r\n                // end of the string\r\n                break;\r\n            }\r\n        } while (true);\r\n        _out.value = source.substring(_out.offset + 1, pos - 1).replace(/\\\\u([0-9A-Fa-f]{4})/g, (_, m0) => {\r\n            return String.fromCodePoint(parseInt(m0, 16));\r\n        }).replace(/\\\\(.)/g, (_, m0) => {\r\n            switch (m0) {\r\n                case '\"': return '\"';\r\n                case '\\\\': return '\\\\';\r\n                case '/': return '/';\r\n                case 'b': return '\\b';\r\n                case 'f': return '\\f';\r\n                case 'n': return '\\n';\r\n                case 'r': return '\\r';\r\n                case 't': return '\\t';\r\n                default: doFail(_state, 'invalid escape sequence');\r\n            }\r\n        });\r\n    }\r\n    else if (chCode === 91 /* LEFT_SQUARE_BRACKET */) {\r\n        _out.type = 2 /* LEFT_SQUARE_BRACKET */;\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 123 /* LEFT_CURLY_BRACKET */) {\r\n        _out.type = 3 /* LEFT_CURLY_BRACKET */;\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 93 /* RIGHT_SQUARE_BRACKET */) {\r\n        _out.type = 4 /* RIGHT_SQUARE_BRACKET */;\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 125 /* RIGHT_CURLY_BRACKET */) {\r\n        _out.type = 5 /* RIGHT_CURLY_BRACKET */;\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 58 /* COLON */) {\r\n        _out.type = 6 /* COLON */;\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 44 /* COMMA */) {\r\n        _out.type = 7 /* COMMA */;\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 110 /* n */) {\r\n        //------------------------ null\r\n        _out.type = 8 /* NULL */;\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 117 /* u */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 108 /* l */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 108 /* l */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 116 /* t */) {\r\n        //------------------------ true\r\n        _out.type = 9 /* TRUE */;\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 114 /* r */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 117 /* u */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 101 /* e */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n    }\r\n    else if (chCode === 102 /* f */) {\r\n        //------------------------ false\r\n        _out.type = 10 /* FALSE */;\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 97 /* a */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 108 /* l */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 115 /* s */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n        chCode = source.charCodeAt(pos);\r\n        if (chCode !== 101 /* e */) {\r\n            return false; /* INVALID */\r\n        }\r\n        pos++;\r\n        char++;\r\n    }\r\n    else {\r\n        //------------------------ numbers\r\n        _out.type = 11 /* NUMBER */;\r\n        do {\r\n            if (pos >= len) {\r\n                return false; /*EOS*/\r\n            }\r\n            chCode = source.charCodeAt(pos);\r\n            if (chCode === 46 /* DOT */\r\n                || (chCode >= 48 /* D0 */ && chCode <= 57 /* D9 */)\r\n                || (chCode === 101 /* e */ || chCode === 69 /* E */)\r\n                || (chCode === 45 /* MINUS */ || chCode === 43 /* PLUS */)) {\r\n                // looks like a piece of a number\r\n                pos++;\r\n                char++;\r\n                continue;\r\n            }\r\n            // pos--; char--;\r\n            break;\r\n        } while (true);\r\n    }\r\n    _out.len = pos - _out.offset;\r\n    if (_out.value === null) {\r\n        _out.value = source.substr(_out.offset, _out.len);\r\n    }\r\n    _state.pos = pos;\r\n    _state.line = line;\r\n    _state.char = char;\r\n    // console.log('PRODUCING TOKEN: ', _out.value, JSONTokenType[_out.type]);\r\n    return true;\r\n}\r\n//# sourceMappingURL=json.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/json.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/main.js":
/*!***************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/main.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst registry_1 = __webpack_require__(/*! ./registry */ \"./node_modules/monaco-textmate/dist/registry.js\");\r\nconst grammarReader_1 = __webpack_require__(/*! ./grammarReader */ \"./node_modules/monaco-textmate/dist/grammarReader.js\");\r\nconst theme_1 = __webpack_require__(/*! ./theme */ \"./node_modules/monaco-textmate/dist/theme.js\");\r\nconst grammar_1 = __webpack_require__(/*! ./grammar */ \"./node_modules/monaco-textmate/dist/grammar.js\");\r\nlet DEFAULT_OPTIONS = {\r\n    getGrammarDefinition: (scopeName) => null,\r\n    getInjections: (scopeName) => null\r\n};\r\n/**\r\n * The registry that will hold all grammars.\r\n */\r\nclass Registry {\r\n    constructor(locator = DEFAULT_OPTIONS) {\r\n        this._locator = locator;\r\n        this._syncRegistry = new registry_1.SyncRegistry(theme_1.Theme.createFromRawTheme(locator.theme));\r\n        this.installationQueue = new Map();\r\n    }\r\n    /**\r\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\r\n     */\r\n    setTheme(theme) {\r\n        this._syncRegistry.setTheme(theme_1.Theme.createFromRawTheme(theme));\r\n    }\r\n    /**\r\n     * Returns a lookup array for color ids.\r\n     */\r\n    getColorMap() {\r\n        return this._syncRegistry.getColorMap();\r\n    }\r\n    /**\r\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\r\n     * Please do not use language id 0.\r\n     */\r\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\r\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\r\n    }\r\n    /**\r\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\r\n     * Please do not use language id 0.\r\n     */\r\n    async loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\r\n        await this._loadGrammar(initialScopeName);\r\n        return this.grammarForScopeName(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes);\r\n    }\r\n    /**\r\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\r\n     */\r\n    async loadGrammar(initialScopeName) {\r\n        return this._loadGrammar(initialScopeName);\r\n    }\r\n    async _loadGrammar(initialScopeName, dependentScope = null) {\r\n        // already installed\r\n        if (this._syncRegistry.lookup(initialScopeName)) {\r\n            return this.grammarForScopeName(initialScopeName);\r\n        }\r\n        // installation in progress\r\n        if (this.installationQueue.has(initialScopeName)) {\r\n            return this.installationQueue.get(initialScopeName);\r\n        }\r\n        // start installation process\r\n        const prom = new Promise(async (resolve, reject) => {\r\n            let grammarDefinition = await this._locator.getGrammarDefinition(initialScopeName, dependentScope);\r\n            if (!grammarDefinition) {\r\n                throw new Error(`A tmGrammar load was requested but registry host failed to provide grammar definition`);\r\n            }\r\n            if ((grammarDefinition.format !== 'json' && grammarDefinition.format !== 'plist') ||\r\n                (grammarDefinition.format === 'json' && typeof grammarDefinition.content !== 'object' && typeof grammarDefinition.content !== 'string') ||\r\n                (grammarDefinition.format === 'plist' && typeof grammarDefinition.content !== 'string')) {\r\n                throw new TypeError('Grammar definition must be an object, either `{ content: string | object, format: \"json\" }` OR `{ content: string, format: \"plist\" }`)');\r\n            }\r\n            const rawGrammar = grammarDefinition.format === 'json'\r\n                ? typeof grammarDefinition.content === 'string'\r\n                    ? grammarReader_1.parseJSONGrammar(grammarDefinition.content, 'c://fakepath/grammar.json')\r\n                    : grammarDefinition.content\r\n                : grammarReader_1.parsePLISTGrammar(grammarDefinition.content, 'c://fakepath/grammar.plist');\r\n            let injections = (typeof this._locator.getInjections === 'function') && this._locator.getInjections(initialScopeName);\r\n            rawGrammar.scopeName = initialScopeName;\r\n            let deps = this._syncRegistry.addGrammar(rawGrammar, injections);\r\n            await Promise.all(deps.map(async (scopeNameD) => {\r\n                try {\r\n                    return this._loadGrammar(scopeNameD, initialScopeName);\r\n                }\r\n                catch (error) {\r\n                    throw new Error(`While trying to load tmGrammar with scopeId: '${initialScopeName}', it's dependency (scopeId: ${scopeNameD}) loading errored: ${error.message}`);\r\n                }\r\n            }));\r\n            resolve(this.grammarForScopeName(initialScopeName));\r\n        });\r\n        this.installationQueue.set(initialScopeName, prom);\r\n        await prom;\r\n        this.installationQueue.delete(initialScopeName);\r\n        return prom;\r\n    }\r\n    /**\r\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `loadGrammarFromPathSync`.\r\n     */\r\n    grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null) {\r\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes);\r\n    }\r\n}\r\nexports.Registry = Registry;\r\nexports.INITIAL = grammar_1.StackElement.NULL;\r\n//# sourceMappingURL=main.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/main.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/matcher.js":
/*!******************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/matcher.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction createMatchers(selector, matchesName) {\r\n    var results = [];\r\n    var tokenizer = newTokenizer(selector);\r\n    var token = tokenizer.next();\r\n    while (token !== null) {\r\n        let priority = 0;\r\n        if (token.length === 2 && token.charAt(1) === ':') {\r\n            switch (token.charAt(0)) {\r\n                case 'R':\r\n                    priority = 1;\r\n                    break;\r\n                case 'L':\r\n                    priority = -1;\r\n                    break;\r\n                default:\r\n                    console.log(`Unknown priority ${token} in scope selector`);\r\n            }\r\n            token = tokenizer.next();\r\n        }\r\n        let matcher = parseConjunction();\r\n        if (matcher) {\r\n            results.push({ matcher, priority });\r\n        }\r\n        if (token !== ',') {\r\n            break;\r\n        }\r\n        token = tokenizer.next();\r\n    }\r\n    return results;\r\n    function parseOperand() {\r\n        if (token === '-') {\r\n            token = tokenizer.next();\r\n            var expressionToNegate = parseOperand();\r\n            return matcherInput => expressionToNegate && !expressionToNegate(matcherInput);\r\n        }\r\n        if (token === '(') {\r\n            token = tokenizer.next();\r\n            var expressionInParents = parseInnerExpression();\r\n            if (token === ')') {\r\n                token = tokenizer.next();\r\n            }\r\n            return expressionInParents;\r\n        }\r\n        if (isIdentifier(token)) {\r\n            var identifiers = [];\r\n            do {\r\n                identifiers.push(token);\r\n                token = tokenizer.next();\r\n            } while (isIdentifier(token));\r\n            return matcherInput => matchesName(identifiers, matcherInput);\r\n        }\r\n        return null;\r\n    }\r\n    function parseConjunction() {\r\n        var matchers = [];\r\n        var matcher = parseOperand();\r\n        while (matcher) {\r\n            matchers.push(matcher);\r\n            matcher = parseOperand();\r\n        }\r\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\r\n    }\r\n    function parseInnerExpression() {\r\n        var matchers = [];\r\n        var matcher = parseConjunction();\r\n        while (matcher) {\r\n            matchers.push(matcher);\r\n            if (token === '|' || token === ',') {\r\n                do {\r\n                    token = tokenizer.next();\r\n                } while (token === '|' || token === ','); // ignore subsequent commas\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            matcher = parseConjunction();\r\n        }\r\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\r\n    }\r\n}\r\nexports.createMatchers = createMatchers;\r\nfunction isIdentifier(token) {\r\n    return token && token.match(/[\\w\\.:]+/);\r\n}\r\nfunction newTokenizer(input) {\r\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\r\n    var match = regex.exec(input);\r\n    return {\r\n        next: () => {\r\n            if (!match) {\r\n                return null;\r\n            }\r\n            var res = match[0];\r\n            match = regex.exec(input);\r\n            return res;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=matcher.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/matcher.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/registry.js":
/*!*******************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/registry.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst grammar_1 = __webpack_require__(/*! ./grammar */ \"./node_modules/monaco-textmate/dist/grammar.js\");\r\nclass SyncRegistry {\r\n    constructor(theme) {\r\n        this._theme = theme;\r\n        this._grammars = {};\r\n        this._rawGrammars = {};\r\n        this._injectionGrammars = {};\r\n    }\r\n    setTheme(theme) {\r\n        this._theme = theme;\r\n        Object.keys(this._grammars).forEach((scopeName) => {\r\n            let grammar = this._grammars[scopeName];\r\n            grammar.onDidChangeTheme();\r\n        });\r\n    }\r\n    getColorMap() {\r\n        return this._theme.getColorMap();\r\n    }\r\n    /**\r\n     * Add `grammar` to registry and return a list of referenced scope names\r\n     */\r\n    addGrammar(grammar, injectionScopeNames) {\r\n        this._rawGrammars[grammar.scopeName] = grammar;\r\n        let includedScopes = {};\r\n        grammar_1.collectIncludedScopes(includedScopes, grammar);\r\n        if (injectionScopeNames) {\r\n            this._injectionGrammars[grammar.scopeName] = injectionScopeNames;\r\n            injectionScopeNames.forEach(scopeName => {\r\n                includedScopes[scopeName] = true;\r\n            });\r\n        }\r\n        return Object.keys(includedScopes);\r\n    }\r\n    /**\r\n     * Lookup a raw grammar.\r\n     */\r\n    lookup(scopeName) {\r\n        return this._rawGrammars[scopeName];\r\n    }\r\n    /**\r\n     * Returns the injections for the given grammar\r\n     */\r\n    injections(targetScope) {\r\n        return this._injectionGrammars[targetScope];\r\n    }\r\n    /**\r\n     * Get the default theme settings\r\n     */\r\n    getDefaults() {\r\n        return this._theme.getDefaults();\r\n    }\r\n    /**\r\n     * Match a scope in the theme.\r\n     */\r\n    themeMatch(scopeName) {\r\n        return this._theme.match(scopeName);\r\n    }\r\n    /**\r\n     * Lookup a grammar.\r\n     */\r\n    grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes) {\r\n        if (!this._grammars[scopeName]) {\r\n            let rawGrammar = this._rawGrammars[scopeName];\r\n            if (!rawGrammar) {\r\n                return null;\r\n            }\r\n            this._grammars[scopeName] = grammar_1.createGrammar(rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, this);\r\n        }\r\n        return this._grammars[scopeName];\r\n    }\r\n}\r\nexports.SyncRegistry = SyncRegistry;\r\n//# sourceMappingURL=registry.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/registry.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/rule.js":
/*!***************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/rule.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/monaco-textmate/dist/utils.js\");\r\nconst onigasm_1 = __webpack_require__(/*! onigasm */ \"./node_modules/onigasm/lib/index.js\");\r\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\r\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\r\nclass Rule {\r\n    constructor($location, id, name, contentName) {\r\n        this.$location = $location;\r\n        this.id = id;\r\n        this._name = name || null;\r\n        this._nameIsCapturing = utils_1.RegexSource.hasCaptures(this._name);\r\n        this._contentName = contentName || null;\r\n        this._contentNameIsCapturing = utils_1.RegexSource.hasCaptures(this._contentName);\r\n    }\r\n    get debugName() {\r\n        return `${this.constructor.name}#${this.id} @ ${path.basename(this.$location.filename)}:${this.$location.line}`;\r\n    }\r\n    getName(lineText, captureIndices) {\r\n        if (!this._nameIsCapturing) {\r\n            return this._name;\r\n        }\r\n        return utils_1.RegexSource.replaceCaptures(this._name, lineText, captureIndices);\r\n    }\r\n    getContentName(lineText, captureIndices) {\r\n        if (!this._contentNameIsCapturing) {\r\n            return this._contentName;\r\n        }\r\n        return utils_1.RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\r\n    }\r\n    collectPatternsRecursive(grammar, out, isFirst) {\r\n        throw new Error('Implement me!');\r\n    }\r\n    compile(grammar, endRegexSource, allowA, allowG) {\r\n        throw new Error('Implement me!');\r\n    }\r\n}\r\nexports.Rule = Rule;\r\nclass CaptureRule extends Rule {\r\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\r\n        super($location, id, name, contentName);\r\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\r\n    }\r\n}\r\nexports.CaptureRule = CaptureRule;\r\nclass RegExpSource {\r\n    constructor(regExpSource, ruleId, handleAnchors = true) {\r\n        if (handleAnchors) {\r\n            this._handleAnchors(regExpSource);\r\n        }\r\n        else {\r\n            this.source = regExpSource;\r\n            this.hasAnchor = false;\r\n        }\r\n        if (this.hasAnchor) {\r\n            this._anchorCache = this._buildAnchorCache();\r\n        }\r\n        this.ruleId = ruleId;\r\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\r\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\r\n    }\r\n    clone() {\r\n        return new RegExpSource(this.source, this.ruleId, true);\r\n    }\r\n    setSource(newSource) {\r\n        if (this.source === newSource) {\r\n            return;\r\n        }\r\n        this.source = newSource;\r\n        if (this.hasAnchor) {\r\n            this._anchorCache = this._buildAnchorCache();\r\n        }\r\n    }\r\n    _handleAnchors(regExpSource) {\r\n        if (regExpSource) {\r\n            let pos, len, ch, nextCh, lastPushedPos = 0, output = [];\r\n            let hasAnchor = false;\r\n            for (pos = 0, len = regExpSource.length; pos < len; pos++) {\r\n                ch = regExpSource.charAt(pos);\r\n                if (ch === '\\\\') {\r\n                    if (pos + 1 < len) {\r\n                        nextCh = regExpSource.charAt(pos + 1);\r\n                        if (nextCh === 'z') {\r\n                            output.push(regExpSource.substring(lastPushedPos, pos));\r\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\r\n                            lastPushedPos = pos + 2;\r\n                        }\r\n                        else if (nextCh === 'A' || nextCh === 'G') {\r\n                            hasAnchor = true;\r\n                        }\r\n                        pos++;\r\n                    }\r\n                }\r\n            }\r\n            this.hasAnchor = hasAnchor;\r\n            if (lastPushedPos === 0) {\r\n                // No \\z hit\r\n                this.source = regExpSource;\r\n            }\r\n            else {\r\n                output.push(regExpSource.substring(lastPushedPos, len));\r\n                this.source = output.join('');\r\n            }\r\n        }\r\n        else {\r\n            this.hasAnchor = false;\r\n            this.source = regExpSource;\r\n        }\r\n    }\r\n    resolveBackReferences(lineText, captureIndices) {\r\n        let capturedValues = captureIndices.map((capture) => {\r\n            return lineText.substring(capture.start, capture.end);\r\n        });\r\n        BACK_REFERENCING_END.lastIndex = 0;\r\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\r\n            return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\r\n        });\r\n    }\r\n    _buildAnchorCache() {\r\n        let A0_G0_result = [];\r\n        let A0_G1_result = [];\r\n        let A1_G0_result = [];\r\n        let A1_G1_result = [];\r\n        let pos, len, ch, nextCh;\r\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\r\n            ch = this.source.charAt(pos);\r\n            A0_G0_result[pos] = ch;\r\n            A0_G1_result[pos] = ch;\r\n            A1_G0_result[pos] = ch;\r\n            A1_G1_result[pos] = ch;\r\n            if (ch === '\\\\') {\r\n                if (pos + 1 < len) {\r\n                    nextCh = this.source.charAt(pos + 1);\r\n                    if (nextCh === 'A') {\r\n                        A0_G0_result[pos + 1] = '\\uFFFF';\r\n                        A0_G1_result[pos + 1] = '\\uFFFF';\r\n                        A1_G0_result[pos + 1] = 'A';\r\n                        A1_G1_result[pos + 1] = 'A';\r\n                    }\r\n                    else if (nextCh === 'G') {\r\n                        A0_G0_result[pos + 1] = '\\uFFFF';\r\n                        A0_G1_result[pos + 1] = 'G';\r\n                        A1_G0_result[pos + 1] = '\\uFFFF';\r\n                        A1_G1_result[pos + 1] = 'G';\r\n                    }\r\n                    else {\r\n                        A0_G0_result[pos + 1] = nextCh;\r\n                        A0_G1_result[pos + 1] = nextCh;\r\n                        A1_G0_result[pos + 1] = nextCh;\r\n                        A1_G1_result[pos + 1] = nextCh;\r\n                    }\r\n                    pos++;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            A0_G0: A0_G0_result.join(''),\r\n            A0_G1: A0_G1_result.join(''),\r\n            A1_G0: A1_G0_result.join(''),\r\n            A1_G1: A1_G1_result.join('')\r\n        };\r\n    }\r\n    resolveAnchors(allowA, allowG) {\r\n        if (!this.hasAnchor) {\r\n            return this.source;\r\n        }\r\n        if (allowA) {\r\n            if (allowG) {\r\n                return this._anchorCache.A1_G1;\r\n            }\r\n            else {\r\n                return this._anchorCache.A1_G0;\r\n            }\r\n        }\r\n        else {\r\n            if (allowG) {\r\n                return this._anchorCache.A0_G1;\r\n            }\r\n            else {\r\n                return this._anchorCache.A0_G0;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.RegExpSource = RegExpSource;\r\nfunction createOnigScanner(sources) {\r\n    return new onigasm_1.OnigScanner(sources);\r\n}\r\nfunction createOnigString(sources) {\r\n    var r = new onigasm_1.OnigString(sources);\r\n    r.$str = sources;\r\n    return r;\r\n}\r\nexports.createOnigString = createOnigString;\r\nfunction getString(str) {\r\n    return str.$str;\r\n}\r\nexports.getString = getString;\r\nclass RegExpSourceList {\r\n    constructor() {\r\n        this._items = [];\r\n        this._hasAnchors = false;\r\n        this._cached = null;\r\n        this._cachedSources = null;\r\n        this._anchorCache = {\r\n            A0_G0: null,\r\n            A0_G1: null,\r\n            A1_G0: null,\r\n            A1_G1: null\r\n        };\r\n    }\r\n    push(item) {\r\n        this._items.push(item);\r\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\r\n    }\r\n    unshift(item) {\r\n        this._items.unshift(item);\r\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\r\n    }\r\n    length() {\r\n        return this._items.length;\r\n    }\r\n    setSource(index, newSource) {\r\n        if (this._items[index].source !== newSource) {\r\n            // bust the cache\r\n            this._cached = null;\r\n            this._anchorCache.A0_G0 = null;\r\n            this._anchorCache.A0_G1 = null;\r\n            this._anchorCache.A1_G0 = null;\r\n            this._anchorCache.A1_G1 = null;\r\n            this._items[index].setSource(newSource);\r\n        }\r\n    }\r\n    compile(grammar, allowA, allowG) {\r\n        if (!this._hasAnchors) {\r\n            if (!this._cached) {\r\n                let regExps = this._items.map(e => e.source);\r\n                this._cached = {\r\n                    scanner: createOnigScanner(regExps),\r\n                    rules: this._items.map(e => e.ruleId),\r\n                    debugRegExps: regExps\r\n                };\r\n            }\r\n            return this._cached;\r\n        }\r\n        else {\r\n            this._anchorCache = {\r\n                A0_G0: this._anchorCache.A0_G0 || (allowA === false && allowG === false ? this._resolveAnchors(allowA, allowG) : null),\r\n                A0_G1: this._anchorCache.A0_G1 || (allowA === false && allowG === true ? this._resolveAnchors(allowA, allowG) : null),\r\n                A1_G0: this._anchorCache.A1_G0 || (allowA === true && allowG === false ? this._resolveAnchors(allowA, allowG) : null),\r\n                A1_G1: this._anchorCache.A1_G1 || (allowA === true && allowG === true ? this._resolveAnchors(allowA, allowG) : null),\r\n            };\r\n            if (allowA) {\r\n                if (allowG) {\r\n                    return this._anchorCache.A1_G1;\r\n                }\r\n                else {\r\n                    return this._anchorCache.A1_G0;\r\n                }\r\n            }\r\n            else {\r\n                if (allowG) {\r\n                    return this._anchorCache.A0_G1;\r\n                }\r\n                else {\r\n                    return this._anchorCache.A0_G0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _resolveAnchors(allowA, allowG) {\r\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\r\n        return {\r\n            scanner: createOnigScanner(regExps),\r\n            rules: this._items.map(e => e.ruleId),\r\n            debugRegExps: regExps\r\n        };\r\n    }\r\n}\r\nexports.RegExpSourceList = RegExpSourceList;\r\nclass MatchRule extends Rule {\r\n    constructor($location, id, name, match, captures) {\r\n        super($location, id, name, null);\r\n        this._match = new RegExpSource(match, this.id);\r\n        this.captures = captures;\r\n        this._cachedCompiledPatterns = null;\r\n    }\r\n    get debugMatchRegExp() {\r\n        return `${this._match.source}`;\r\n    }\r\n    collectPatternsRecursive(grammar, out, isFirst) {\r\n        out.push(this._match);\r\n    }\r\n    compile(grammar, endRegexSource, allowA, allowG) {\r\n        if (!this._cachedCompiledPatterns) {\r\n            this._cachedCompiledPatterns = new RegExpSourceList();\r\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\r\n        }\r\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\r\n    }\r\n}\r\nexports.MatchRule = MatchRule;\r\nclass IncludeOnlyRule extends Rule {\r\n    constructor($location, id, name, contentName, patterns) {\r\n        super($location, id, name, contentName);\r\n        this.patterns = patterns.patterns;\r\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\r\n        this._cachedCompiledPatterns = null;\r\n    }\r\n    collectPatternsRecursive(grammar, out, isFirst) {\r\n        let i, len, rule;\r\n        for (i = 0, len = this.patterns.length; i < len; i++) {\r\n            rule = grammar.getRule(this.patterns[i]);\r\n            rule.collectPatternsRecursive(grammar, out, false);\r\n        }\r\n    }\r\n    compile(grammar, endRegexSource, allowA, allowG) {\r\n        if (!this._cachedCompiledPatterns) {\r\n            this._cachedCompiledPatterns = new RegExpSourceList();\r\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\r\n        }\r\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\r\n    }\r\n}\r\nexports.IncludeOnlyRule = IncludeOnlyRule;\r\nfunction escapeRegExpCharacters(value) {\r\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\r\n}\r\nclass BeginEndRule extends Rule {\r\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\r\n        super($location, id, name, contentName);\r\n        this._begin = new RegExpSource(begin, this.id);\r\n        this.beginCaptures = beginCaptures;\r\n        this._end = new RegExpSource(end, -1);\r\n        this.endHasBackReferences = this._end.hasBackReferences;\r\n        this.endCaptures = endCaptures;\r\n        this.applyEndPatternLast = applyEndPatternLast || false;\r\n        this.patterns = patterns.patterns;\r\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\r\n        this._cachedCompiledPatterns = null;\r\n    }\r\n    get debugBeginRegExp() {\r\n        return `${this._begin.source}`;\r\n    }\r\n    get debugEndRegExp() {\r\n        return `${this._end.source}`;\r\n    }\r\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\r\n        return this._end.resolveBackReferences(lineText, captureIndices);\r\n    }\r\n    collectPatternsRecursive(grammar, out, isFirst) {\r\n        if (isFirst) {\r\n            let i, len, rule;\r\n            for (i = 0, len = this.patterns.length; i < len; i++) {\r\n                rule = grammar.getRule(this.patterns[i]);\r\n                rule.collectPatternsRecursive(grammar, out, false);\r\n            }\r\n        }\r\n        else {\r\n            out.push(this._begin);\r\n        }\r\n    }\r\n    compile(grammar, endRegexSource, allowA, allowG) {\r\n        let precompiled = this._precompile(grammar);\r\n        if (this._end.hasBackReferences) {\r\n            if (this.applyEndPatternLast) {\r\n                precompiled.setSource(precompiled.length() - 1, endRegexSource);\r\n            }\r\n            else {\r\n                precompiled.setSource(0, endRegexSource);\r\n            }\r\n        }\r\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\r\n    }\r\n    _precompile(grammar) {\r\n        if (!this._cachedCompiledPatterns) {\r\n            this._cachedCompiledPatterns = new RegExpSourceList();\r\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\r\n            if (this.applyEndPatternLast) {\r\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\r\n            }\r\n            else {\r\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\r\n            }\r\n        }\r\n        return this._cachedCompiledPatterns;\r\n    }\r\n}\r\nexports.BeginEndRule = BeginEndRule;\r\nclass BeginWhileRule extends Rule {\r\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\r\n        super($location, id, name, contentName);\r\n        this._begin = new RegExpSource(begin, this.id);\r\n        this.beginCaptures = beginCaptures;\r\n        this.whileCaptures = whileCaptures;\r\n        this._while = new RegExpSource(_while, -2);\r\n        this.whileHasBackReferences = this._while.hasBackReferences;\r\n        this.patterns = patterns.patterns;\r\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\r\n        this._cachedCompiledPatterns = null;\r\n        this._cachedCompiledWhilePatterns = null;\r\n    }\r\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\r\n        return this._while.resolveBackReferences(lineText, captureIndices);\r\n    }\r\n    collectPatternsRecursive(grammar, out, isFirst) {\r\n        if (isFirst) {\r\n            let i, len, rule;\r\n            for (i = 0, len = this.patterns.length; i < len; i++) {\r\n                rule = grammar.getRule(this.patterns[i]);\r\n                rule.collectPatternsRecursive(grammar, out, false);\r\n            }\r\n        }\r\n        else {\r\n            out.push(this._begin);\r\n        }\r\n    }\r\n    compile(grammar, endRegexSource, allowA, allowG) {\r\n        this._precompile(grammar);\r\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\r\n    }\r\n    _precompile(grammar) {\r\n        if (!this._cachedCompiledPatterns) {\r\n            this._cachedCompiledPatterns = new RegExpSourceList();\r\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\r\n        }\r\n    }\r\n    compileWhile(grammar, endRegexSource, allowA, allowG) {\r\n        this._precompileWhile(grammar);\r\n        if (this._while.hasBackReferences) {\r\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource);\r\n        }\r\n        return this._cachedCompiledWhilePatterns.compile(grammar, allowA, allowG);\r\n    }\r\n    _precompileWhile(grammar) {\r\n        if (!this._cachedCompiledWhilePatterns) {\r\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\r\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\r\n        }\r\n    }\r\n}\r\nexports.BeginWhileRule = BeginWhileRule;\r\nclass RuleFactory {\r\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\r\n        return helper.registerRule((id) => {\r\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\r\n        });\r\n    }\r\n    static getCompiledRuleId(desc, helper, repository) {\r\n        if (!desc.id) {\r\n            helper.registerRule((id) => {\r\n                desc.id = id;\r\n                if (desc.match) {\r\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\r\n                }\r\n                if (!desc.begin) {\r\n                    if (desc.repository) {\r\n                        repository = utils_1.mergeObjects({}, repository, desc.repository);\r\n                    }\r\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(desc.patterns, helper, repository));\r\n                }\r\n                if (desc.while) {\r\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\r\n                }\r\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\r\n            });\r\n        }\r\n        return desc.id;\r\n    }\r\n    static _compileCaptures(captures, helper, repository) {\r\n        let r = [], numericCaptureId, maximumCaptureId, i, captureId;\r\n        if (captures) {\r\n            // Find the maximum capture id\r\n            maximumCaptureId = 0;\r\n            for (captureId in captures) {\r\n                if (captureId === '$vscodeTextmateLocation') {\r\n                    continue;\r\n                }\r\n                numericCaptureId = parseInt(captureId, 10);\r\n                if (numericCaptureId > maximumCaptureId) {\r\n                    maximumCaptureId = numericCaptureId;\r\n                }\r\n            }\r\n            // Initialize result\r\n            for (i = 0; i <= maximumCaptureId; i++) {\r\n                r[i] = null;\r\n            }\r\n            // Fill out result\r\n            for (captureId in captures) {\r\n                if (captureId === '$vscodeTextmateLocation') {\r\n                    continue;\r\n                }\r\n                numericCaptureId = parseInt(captureId, 10);\r\n                let retokenizeCapturedWithRuleId = 0;\r\n                if (captures[captureId].patterns) {\r\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\r\n                }\r\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    static _compilePatterns(patterns, helper, repository) {\r\n        let r = [], pattern, i, len, patternId, externalGrammar, rule, skipRule;\r\n        if (patterns) {\r\n            for (i = 0, len = patterns.length; i < len; i++) {\r\n                pattern = patterns[i];\r\n                patternId = -1;\r\n                if (pattern.include) {\r\n                    if (pattern.include.charAt(0) === '#') {\r\n                        // Local include found in `repository`\r\n                        let localIncludedRule = repository[pattern.include.substr(1)];\r\n                        if (localIncludedRule) {\r\n                            patternId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\r\n                        }\r\n                        else {\r\n                            // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\r\n                        }\r\n                    }\r\n                    else if (pattern.include === '$base' || pattern.include === '$self') {\r\n                        // Special include also found in `repository`\r\n                        patternId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\r\n                    }\r\n                    else {\r\n                        let externalGrammarName = null, externalGrammarInclude = null, sharpIndex = pattern.include.indexOf('#');\r\n                        if (sharpIndex >= 0) {\r\n                            externalGrammarName = pattern.include.substring(0, sharpIndex);\r\n                            externalGrammarInclude = pattern.include.substring(sharpIndex + 1);\r\n                        }\r\n                        else {\r\n                            externalGrammarName = pattern.include;\r\n                        }\r\n                        // External include\r\n                        externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\r\n                        if (externalGrammar) {\r\n                            if (externalGrammarInclude) {\r\n                                let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\r\n                                if (externalIncludedRule) {\r\n                                    patternId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\r\n                                }\r\n                                else {\r\n                                    // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\r\n                                }\r\n                            }\r\n                            else {\r\n                                patternId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // console.warn('CANNOT find grammar for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    patternId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\r\n                }\r\n                if (patternId !== -1) {\r\n                    rule = helper.getRule(patternId);\r\n                    skipRule = false;\r\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\r\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\r\n                            skipRule = true;\r\n                        }\r\n                    }\r\n                    if (skipRule) {\r\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\r\n                        continue;\r\n                    }\r\n                    r.push(patternId);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            patterns: r,\r\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\r\n        };\r\n    }\r\n}\r\nexports.RuleFactory = RuleFactory;\r\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/rule.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/theme.js":
/*!****************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/theme.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ParsedThemeRule {\r\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\r\n        this.scope = scope;\r\n        this.parentScopes = parentScopes;\r\n        this.index = index;\r\n        this.fontStyle = fontStyle;\r\n        this.foreground = foreground;\r\n        this.background = background;\r\n    }\r\n}\r\nexports.ParsedThemeRule = ParsedThemeRule;\r\nfunction isValidHexColor(hex) {\r\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\r\n        // #rrggbb\r\n        return true;\r\n    }\r\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\r\n        // #rrggbbaa\r\n        return true;\r\n    }\r\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\r\n        // #rgb\r\n        return true;\r\n    }\r\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\r\n        // #rgba\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Parse a raw theme into rules.\r\n */\r\nfunction parseTheme(source) {\r\n    if (!source) {\r\n        return [];\r\n    }\r\n    if (!source.settings || !Array.isArray(source.settings)) {\r\n        return [];\r\n    }\r\n    let settings = source.settings;\r\n    let result = [], resultLen = 0;\r\n    for (let i = 0, len = settings.length; i < len; i++) {\r\n        let entry = settings[i];\r\n        if (!entry.settings) {\r\n            continue;\r\n        }\r\n        let scopes;\r\n        if (typeof entry.scope === 'string') {\r\n            let _scope = entry.scope;\r\n            // remove leading commas\r\n            _scope = _scope.replace(/^[,]+/, '');\r\n            // remove trailing commans\r\n            _scope = _scope.replace(/[,]+$/, '');\r\n            scopes = _scope.split(',');\r\n        }\r\n        else if (Array.isArray(entry.scope)) {\r\n            scopes = entry.scope;\r\n        }\r\n        else {\r\n            scopes = [''];\r\n        }\r\n        let fontStyle = -1 /* NotSet */;\r\n        if (typeof entry.settings.fontStyle === 'string') {\r\n            fontStyle = 0 /* None */;\r\n            let segments = entry.settings.fontStyle.split(' ');\r\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\r\n                let segment = segments[j];\r\n                switch (segment) {\r\n                    case 'italic':\r\n                        fontStyle = fontStyle | 1 /* Italic */;\r\n                        break;\r\n                    case 'bold':\r\n                        fontStyle = fontStyle | 2 /* Bold */;\r\n                        break;\r\n                    case 'underline':\r\n                        fontStyle = fontStyle | 4 /* Underline */;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        let foreground = null;\r\n        if (typeof entry.settings.foreground === 'string' && isValidHexColor(entry.settings.foreground)) {\r\n            foreground = entry.settings.foreground;\r\n        }\r\n        let background = null;\r\n        if (typeof entry.settings.background === 'string' && isValidHexColor(entry.settings.background)) {\r\n            background = entry.settings.background;\r\n        }\r\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\r\n            let _scope = scopes[j].trim();\r\n            let segments = _scope.split(' ');\r\n            let scope = segments[segments.length - 1];\r\n            let parentScopes = null;\r\n            if (segments.length > 1) {\r\n                parentScopes = segments.slice(0, segments.length - 1);\r\n                parentScopes.reverse();\r\n            }\r\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.parseTheme = parseTheme;\r\n/**\r\n * Resolve rules (i.e. inheritance).\r\n */\r\nfunction resolveParsedThemeRules(parsedThemeRules) {\r\n    // Sort rules lexicographically, and then by index if necessary\r\n    parsedThemeRules.sort((a, b) => {\r\n        let r = strcmp(a.scope, b.scope);\r\n        if (r !== 0) {\r\n            return r;\r\n        }\r\n        r = strArrCmp(a.parentScopes, b.parentScopes);\r\n        if (r !== 0) {\r\n            return r;\r\n        }\r\n        return a.index - b.index;\r\n    });\r\n    // Determine defaults\r\n    let defaultFontStyle = 0 /* None */;\r\n    let defaultForeground = '#000000';\r\n    let defaultBackground = '#ffffff';\r\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\r\n        let incomingDefaults = parsedThemeRules.shift();\r\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\r\n            defaultFontStyle = incomingDefaults.fontStyle;\r\n        }\r\n        if (incomingDefaults.foreground !== null) {\r\n            defaultForeground = incomingDefaults.foreground;\r\n        }\r\n        if (incomingDefaults.background !== null) {\r\n            defaultBackground = incomingDefaults.background;\r\n        }\r\n    }\r\n    let colorMap = new ColorMap();\r\n    let defaults = new ThemeTrieElementRule(0, null, defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\r\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\r\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\r\n        let rule = parsedThemeRules[i];\r\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\r\n    }\r\n    return new Theme(colorMap, defaults, root);\r\n}\r\nclass ColorMap {\r\n    constructor() {\r\n        this._lastColorId = 0;\r\n        this._id2color = [];\r\n        this._color2id = Object.create(null);\r\n    }\r\n    getId(color) {\r\n        if (color === null) {\r\n            return 0;\r\n        }\r\n        color = color.toUpperCase();\r\n        let value = this._color2id[color];\r\n        if (value) {\r\n            return value;\r\n        }\r\n        value = ++this._lastColorId;\r\n        this._color2id[color] = value;\r\n        this._id2color[value] = color;\r\n        return value;\r\n    }\r\n    getColorMap() {\r\n        return this._id2color.slice(0);\r\n    }\r\n}\r\nexports.ColorMap = ColorMap;\r\nclass Theme {\r\n    static createFromRawTheme(source) {\r\n        return this.createFromParsedTheme(parseTheme(source));\r\n    }\r\n    static createFromParsedTheme(source) {\r\n        return resolveParsedThemeRules(source);\r\n    }\r\n    constructor(colorMap, defaults, root) {\r\n        this._colorMap = colorMap;\r\n        this._root = root;\r\n        this._defaults = defaults;\r\n        this._cache = {};\r\n    }\r\n    getColorMap() {\r\n        return this._colorMap.getColorMap();\r\n    }\r\n    getDefaults() {\r\n        return this._defaults;\r\n    }\r\n    match(scopeName) {\r\n        if (!this._cache.hasOwnProperty(scopeName)) {\r\n            this._cache[scopeName] = this._root.match(scopeName);\r\n        }\r\n        return this._cache[scopeName];\r\n    }\r\n}\r\nexports.Theme = Theme;\r\nfunction strcmp(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    if (a > b) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexports.strcmp = strcmp;\r\nfunction strArrCmp(a, b) {\r\n    if (a === null && b === null) {\r\n        return 0;\r\n    }\r\n    if (!a) {\r\n        return -1;\r\n    }\r\n    if (!b) {\r\n        return 1;\r\n    }\r\n    let len1 = a.length;\r\n    let len2 = b.length;\r\n    if (len1 === len2) {\r\n        for (let i = 0; i < len1; i++) {\r\n            let res = strcmp(a[i], b[i]);\r\n            if (res !== 0) {\r\n                return res;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    return len1 - len2;\r\n}\r\nexports.strArrCmp = strArrCmp;\r\nclass ThemeTrieElementRule {\r\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\r\n        this.scopeDepth = scopeDepth;\r\n        this.parentScopes = parentScopes;\r\n        this.fontStyle = fontStyle;\r\n        this.foreground = foreground;\r\n        this.background = background;\r\n    }\r\n    clone() {\r\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\r\n    }\r\n    static cloneArr(arr) {\r\n        let r = [];\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            r[i] = arr[i].clone();\r\n        }\r\n        return r;\r\n    }\r\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\r\n        if (this.scopeDepth > scopeDepth) {\r\n            console.log('how did this happen?');\r\n        }\r\n        else {\r\n            this.scopeDepth = scopeDepth;\r\n        }\r\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\r\n        if (fontStyle !== -1 /* NotSet */) {\r\n            this.fontStyle = fontStyle;\r\n        }\r\n        if (foreground !== 0) {\r\n            this.foreground = foreground;\r\n        }\r\n        if (background !== 0) {\r\n            this.background = background;\r\n        }\r\n    }\r\n}\r\nexports.ThemeTrieElementRule = ThemeTrieElementRule;\r\nclass ThemeTrieElement {\r\n    constructor(mainRule, rulesWithParentScopes = [], children = {}) {\r\n        this._mainRule = mainRule;\r\n        this._rulesWithParentScopes = rulesWithParentScopes;\r\n        this._children = children;\r\n    }\r\n    static _sortBySpecificity(arr) {\r\n        if (arr.length === 1) {\r\n            return arr;\r\n        }\r\n        arr.sort(this._cmpBySpecificity);\r\n        return arr;\r\n    }\r\n    static _cmpBySpecificity(a, b) {\r\n        if (a.scopeDepth === b.scopeDepth) {\r\n            const aParentScopes = a.parentScopes;\r\n            const bParentScopes = b.parentScopes;\r\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\r\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\r\n            if (aParentScopesLen === bParentScopesLen) {\r\n                for (let i = 0; i < aParentScopesLen; i++) {\r\n                    const aLen = aParentScopes[i].length;\r\n                    const bLen = bParentScopes[i].length;\r\n                    if (aLen !== bLen) {\r\n                        return bLen - aLen;\r\n                    }\r\n                }\r\n            }\r\n            return bParentScopesLen - aParentScopesLen;\r\n        }\r\n        return b.scopeDepth - a.scopeDepth;\r\n    }\r\n    match(scope) {\r\n        if (scope === '') {\r\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\r\n        }\r\n        let dotIndex = scope.indexOf('.');\r\n        let head;\r\n        let tail;\r\n        if (dotIndex === -1) {\r\n            head = scope;\r\n            tail = '';\r\n        }\r\n        else {\r\n            head = scope.substring(0, dotIndex);\r\n            tail = scope.substring(dotIndex + 1);\r\n        }\r\n        if (this._children.hasOwnProperty(head)) {\r\n            return this._children[head].match(tail);\r\n        }\r\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\r\n    }\r\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\r\n        if (scope === '') {\r\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\r\n            return;\r\n        }\r\n        let dotIndex = scope.indexOf('.');\r\n        let head;\r\n        let tail;\r\n        if (dotIndex === -1) {\r\n            head = scope;\r\n            tail = '';\r\n        }\r\n        else {\r\n            head = scope.substring(0, dotIndex);\r\n            tail = scope.substring(dotIndex + 1);\r\n        }\r\n        let child;\r\n        if (this._children.hasOwnProperty(head)) {\r\n            child = this._children[head];\r\n        }\r\n        else {\r\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\r\n            this._children[head] = child;\r\n        }\r\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\r\n    }\r\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\r\n        if (parentScopes === null) {\r\n            // Merge into the main rule\r\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\r\n            return;\r\n        }\r\n        // Try to merge into existing rule\r\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\r\n            let rule = this._rulesWithParentScopes[i];\r\n            if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\r\n                // bingo! => we get to merge this into an existing one\r\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\r\n                return;\r\n            }\r\n        }\r\n        // Must add a new rule\r\n        // Inherit from main rule\r\n        if (fontStyle === -1 /* NotSet */) {\r\n            fontStyle = this._mainRule.fontStyle;\r\n        }\r\n        if (foreground === 0) {\r\n            foreground = this._mainRule.foreground;\r\n        }\r\n        if (background === 0) {\r\n            background = this._mainRule.background;\r\n        }\r\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\r\n    }\r\n}\r\nexports.ThemeTrieElement = ThemeTrieElement;\r\n//# sourceMappingURL=theme.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/theme.js?");

/***/ }),

/***/ "./node_modules/monaco-textmate/dist/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/monaco-textmate/dist/utils.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction clone(something) {\r\n    return doClone(something);\r\n}\r\nexports.clone = clone;\r\nfunction doClone(something) {\r\n    if (Array.isArray(something)) {\r\n        return cloneArray(something);\r\n    }\r\n    if (typeof something === 'object') {\r\n        return cloneObj(something);\r\n    }\r\n    return something;\r\n}\r\nfunction cloneArray(arr) {\r\n    let r = [];\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        r[i] = doClone(arr[i]);\r\n    }\r\n    return r;\r\n}\r\nfunction cloneObj(obj) {\r\n    let r = {};\r\n    for (let key in obj) {\r\n        r[key] = doClone(obj[key]);\r\n    }\r\n    return r;\r\n}\r\nfunction mergeObjects(target, ...sources) {\r\n    sources.forEach(source => {\r\n        for (let key in source) {\r\n            target[key] = source[key];\r\n        }\r\n    });\r\n    return target;\r\n}\r\nexports.mergeObjects = mergeObjects;\r\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/;\r\nclass RegexSource {\r\n    static hasCaptures(regexSource) {\r\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\r\n    }\r\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\r\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\r\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\r\n            if (capture) {\r\n                let result = captureSource.substring(capture.start, capture.end);\r\n                // Remove leading dots that would make the selector invalid\r\n                while (result[0] === '.') {\r\n                    result = result.substring(1);\r\n                }\r\n                switch (command) {\r\n                    case 'downcase':\r\n                        return result.toLowerCase();\r\n                    case 'upcase':\r\n                        return result.toUpperCase();\r\n                    default:\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                return match;\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.RegexSource = RegexSource;\r\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://init/./node_modules/monaco-textmate/dist/utils.js?");

/***/ }),

/***/ "./node_modules/onigasm/lib/OnigRegExp.js":
/*!************************************************!*\
  !*** ./node_modules/onigasm/lib/OnigRegExp.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst OnigScanner_1 = __webpack_require__(/*! ./OnigScanner */ \"./node_modules/onigasm/lib/OnigScanner.js\");\r\nclass OnigRegExp {\r\n    /**\r\n     * Create a new regex with the given pattern\r\n     * @param source A string pattern\r\n     */\r\n    constructor(source) {\r\n        this.source = source;\r\n        try {\r\n            this.scanner = new OnigScanner_1.default([this.source]);\r\n        }\r\n        catch (error) {\r\n            // doesn't make much sense, but this to pass atom/node-oniguruam tests\r\n        }\r\n    }\r\n    /**\r\n     * Synchronously search the string for a match starting at the given position\r\n     * @param string The string to search\r\n     * @param startPosition The optional position to start the search at, defaults to `0`\r\n     */\r\n    searchSync(string, startPosition) {\r\n        let match;\r\n        if (startPosition == null) {\r\n            startPosition = 0;\r\n        }\r\n        match = this.scanner.findNextMatchSync(string, startPosition);\r\n        return this.captureIndicesForMatch(string, match);\r\n    }\r\n    /**\r\n     * Search the string for a match starting at the given position\r\n     * @param string The string to search\r\n     * @param startPosition The optional position to start the search at, defaults to `0`\r\n     * @param callback The `(error, match)` function to call when done, match will be null if no matches were found. match will be an array of objects for each matched group on a successful search\r\n     */\r\n    search(string, startPosition, callback) {\r\n        if (startPosition == null) {\r\n            startPosition = 0;\r\n        }\r\n        if (typeof startPosition === 'function') {\r\n            callback = startPosition;\r\n            startPosition = 0;\r\n        }\r\n        try {\r\n            const ret = this.searchSync(string, startPosition);\r\n            callback(null, ret);\r\n        }\r\n        catch (error) {\r\n            callback(error);\r\n        }\r\n    }\r\n    /**\r\n     * Synchronously test if this regular expression matches the given string\r\n     * @param string The string to test against\r\n     */\r\n    testSync(string) {\r\n        if ((typeof this.source === 'boolean' || typeof string === 'boolean')) {\r\n            return this.source === string;\r\n        }\r\n        return this.searchSync(string) != null;\r\n    }\r\n    /**\r\n     * Test if this regular expression matches the given string\r\n     * @param string The string to test against\r\n     * @param callback The (error, matches) function to call when done, matches will be true if at least one match is found, false otherwise\r\n     */\r\n    test(string, callback) {\r\n        if (typeof callback !== 'function') {\r\n            callback = () => { };\r\n        }\r\n        try {\r\n            callback(null, this.testSync(string));\r\n        }\r\n        catch (error) {\r\n            callback(error);\r\n        }\r\n    }\r\n    captureIndicesForMatch(string, match) {\r\n        if (match != null) {\r\n            const { captureIndices } = match;\r\n            let capture;\r\n            string = this.scanner.convertToString(string);\r\n            for (let i = 0; i < captureIndices.length; i++) {\r\n                capture = captureIndices[i];\r\n                capture.match = string.slice(capture.start, capture.end);\r\n            }\r\n            return captureIndices;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexports.default = OnigRegExp;\r\n//# sourceMappingURL=OnigRegExp.js.map\n\n//# sourceURL=webpack://init/./node_modules/onigasm/lib/OnigRegExp.js?");

/***/ }),

/***/ "./node_modules/onigasm/lib/OnigScanner.js":
/*!*************************************************!*\
  !*** ./node_modules/onigasm/lib/OnigScanner.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst LRUCache = __webpack_require__(/*! lru-cache */ \"./node_modules/lru-cache/index.js\");\r\n// ugly code end\r\nconst onigasmH_1 = __webpack_require__(/*! ./onigasmH */ \"./node_modules/onigasm/lib/onigasmH.js\");\r\nconst OnigString_1 = __webpack_require__(/*! ./OnigString */ \"./node_modules/onigasm/lib/OnigString.js\");\r\nconst cache = new LRUCache({\r\n    dispose: (scanner, info) => {\r\n        const status = onigasmH_1.onigasmH.ccall('disposeCompiledPatterns', 'number', ['array', 'number'], [info.regexTPtrs, scanner.patterns.length]);\r\n        if (status !== 0) {\r\n            const errString = onigasmH_1.onigasmH.ccall('getLastError', 'string');\r\n            throw new Error(errString);\r\n        }\r\n    },\r\n    max: 1000,\r\n});\r\nclass OnigScanner {\r\n    /**\r\n     * Create a new scanner with the given patterns\r\n     * @param patterns  An array of string patterns\r\n     */\r\n    constructor(patterns) {\r\n        if (onigasmH_1.onigasmH === null) {\r\n            throw new Error(`Onigasm has not been initialized, call loadWASM from 'onigasm' exports before using any other API`);\r\n        }\r\n        for (let i = 0; i < patterns.length; i++) {\r\n            const pattern = patterns[i];\r\n            if (typeof pattern !== 'string') {\r\n                throw new TypeError(`First parameter to OnigScanner constructor must be array of (pattern) strings`);\r\n            }\r\n        }\r\n        this.sources = patterns.slice();\r\n    }\r\n    get patterns() {\r\n        return this.sources.slice();\r\n    }\r\n    /**\r\n     * Find the next match from a given position\r\n     * @param string The string to search\r\n     * @param startPosition The optional position to start at, defaults to 0\r\n     * @param callback The (error, match) function to call when done, match will null when there is no match\r\n     */\r\n    findNextMatch(string, startPosition, callback) {\r\n        if (startPosition == null) {\r\n            startPosition = 0;\r\n        }\r\n        if (typeof startPosition === 'function') {\r\n            callback = startPosition;\r\n            startPosition = 0;\r\n        }\r\n        try {\r\n            const match = this.findNextMatchSync(string, startPosition);\r\n            callback(null, match);\r\n        }\r\n        catch (error) {\r\n            callback(error);\r\n        }\r\n    }\r\n    /**\r\n     * Find the next match from a given position\r\n     * @param string The string to search\r\n     * @param startPosition The optional position to start at, defaults to 0\r\n     */\r\n    findNextMatchSync(string, startPosition) {\r\n        if (startPosition == null) {\r\n            startPosition = 0;\r\n        }\r\n        startPosition = this.convertToNumber(startPosition);\r\n        let onigNativeInfo = cache.get(this);\r\n        let status = 0;\r\n        if (!onigNativeInfo) {\r\n            const regexTAddrRecieverPtr = onigasmH_1.onigasmH._malloc(4);\r\n            const regexTPtrs = [];\r\n            for (let i = 0; i < this.sources.length; i++) {\r\n                const pattern = this.sources[i];\r\n                status = onigasmH_1.onigasmH.ccall('compilePattern', 'number', ['string', 'number'], [pattern, regexTAddrRecieverPtr]);\r\n                if (status !== 0) {\r\n                    const errString = onigasmH_1.onigasmH.ccall('getLastError', 'string');\r\n                    throw new Error(errString);\r\n                }\r\n                const regexTAddress = new Uint32Array(onigasmH_1.onigasmH.buffer, regexTAddrRecieverPtr, 1)[0];\r\n                regexTPtrs.push(regexTAddress);\r\n            }\r\n            onigNativeInfo = {\r\n                regexTPtrs: new Uint8Array(Uint32Array.from(regexTPtrs).buffer),\r\n            };\r\n            onigasmH_1.onigasmH._free(regexTAddrRecieverPtr);\r\n            cache.set(this, onigNativeInfo);\r\n        }\r\n        const resultInfoReceiverPtr = onigasmH_1.onigasmH._malloc(8);\r\n        const onigString = string instanceof OnigString_1.default ? string : new OnigString_1.default(this.convertToString(string));\r\n        const strPtr = onigasmH_1.onigasmH._malloc(onigString.utf8Bytes.length);\r\n        onigasmH_1.onigasmH.HEAPU8.set(onigString.utf8Bytes, strPtr);\r\n        status = onigasmH_1.onigasmH.ccall('findBestMatch', 'number', ['array', 'number', 'number', 'number', 'number', 'number'], [\r\n            // regex_t **patterns\r\n            onigNativeInfo.regexTPtrs,\r\n            // int patternCount\r\n            this.sources.length,\r\n            // UChar *utf8String\r\n            strPtr,\r\n            // int strLen\r\n            onigString.utf8Bytes.length - 1,\r\n            // int startOffset\r\n            onigString.convertUtf16OffsetToUtf8(startPosition),\r\n            // int *resultInfo\r\n            resultInfoReceiverPtr,\r\n        ]);\r\n        if (status !== 0) {\r\n            const errString = onigasmH_1.onigasmH.ccall('getLastError', 'string');\r\n            throw new Error(errString);\r\n        }\r\n        const [\r\n        // The index of pattern which matched the string at least offset from 0 (start)\r\n        bestPatternIdx, \r\n        // Begin address of capture info encoded as pairs\r\n        // like [start, end, start, end, start, end, ...]\r\n        //  - first start-end pair is entire match (index 0 and 1)\r\n        //  - subsequent pairs are capture groups (2, 3 = first capture group, 4, 5 = second capture group and so on)\r\n        encodedResultBeginAddress, \r\n        // Length of the [start, end, ...] sequence so we know how much memory to read (will always be 0 or multiple of 2)\r\n        encodedResultLength,] = new Uint32Array(onigasmH_1.onigasmH.buffer, resultInfoReceiverPtr, 3);\r\n        onigasmH_1.onigasmH._free(strPtr);\r\n        onigasmH_1.onigasmH._free(resultInfoReceiverPtr);\r\n        if (encodedResultLength > 0) {\r\n            const encodedResult = new Uint32Array(onigasmH_1.onigasmH.buffer, encodedResultBeginAddress, encodedResultLength);\r\n            const captureIndices = [];\r\n            let i = 0;\r\n            let captureIdx = 0;\r\n            while (i < encodedResultLength) {\r\n                const index = captureIdx++;\r\n                let start = encodedResult[i++];\r\n                let end = encodedResult[i++];\r\n                if (onigString.hasMultiByteCharacters) {\r\n                    start = onigString.convertUtf8OffsetToUtf16(start);\r\n                    end = onigString.convertUtf8OffsetToUtf16(end);\r\n                }\r\n                captureIndices.push({\r\n                    end,\r\n                    index,\r\n                    length: end - start,\r\n                    start,\r\n                });\r\n            }\r\n            onigasmH_1.onigasmH._free(encodedResultBeginAddress);\r\n            return {\r\n                captureIndices,\r\n                index: bestPatternIdx,\r\n                scanner: this,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    convertToString(value) {\r\n        if (value === undefined) {\r\n            return 'undefined';\r\n        }\r\n        if (value === null) {\r\n            return 'null';\r\n        }\r\n        if (value instanceof OnigString_1.default) {\r\n            return value.content;\r\n        }\r\n        return value.toString();\r\n    }\r\n    convertToNumber(value) {\r\n        value = parseInt(value, 10);\r\n        if (!isFinite(value)) {\r\n            value = 0;\r\n        }\r\n        value = Math.max(value, 0);\r\n        return value;\r\n    }\r\n}\r\nexports.OnigScanner = OnigScanner;\r\nexports.default = OnigScanner;\r\n//# sourceMappingURL=OnigScanner.js.map\n\n//# sourceURL=webpack://init/./node_modules/onigasm/lib/OnigScanner.js?");

/***/ }),

/***/ "./node_modules/onigasm/lib/OnigString.js":
/*!************************************************!*\
  !*** ./node_modules/onigasm/lib/OnigString.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass OnigString {\r\n    constructor(content) {\r\n        this.substring = (start, end) => {\r\n            return this.source.substring(start, end);\r\n        };\r\n        this.toString = (start, end) => {\r\n            return this.source;\r\n        };\r\n        if (typeof content !== 'string') {\r\n            throw new TypeError('Argument must be a string');\r\n        }\r\n        this.source = content;\r\n        this._utf8Bytes = null;\r\n        this._utf8Indexes = null;\r\n    }\r\n    get utf8Bytes() {\r\n        if (!this._utf8Bytes) {\r\n            this.encode();\r\n        }\r\n        return this._utf8Bytes;\r\n    }\r\n    /**\r\n     * Returns `null` if all utf8 offsets match utf-16 offset (content has no multi byte characters)\r\n     */\r\n    get utf8Indexes() {\r\n        if (!this._utf8Bytes) {\r\n            this.encode();\r\n        }\r\n        return this._utf8Indexes;\r\n    }\r\n    get content() {\r\n        return this.source;\r\n    }\r\n    get length() {\r\n        return this.source.length;\r\n    }\r\n    get hasMultiByteCharacters() {\r\n        return this.utf8Indexes !== null;\r\n    }\r\n    convertUtf8OffsetToUtf16(utf8Offset) {\r\n        if (utf8Offset < 0) {\r\n            return 0;\r\n        }\r\n        const utf8Array = this._utf8Bytes;\r\n        if (utf8Offset >= utf8Array.length - 1) {\r\n            return this.source.length;\r\n        }\r\n        const utf8OffsetMap = this.utf8Indexes;\r\n        if (utf8OffsetMap && utf8Offset >= this._mappingTableStartOffset) {\r\n            return findFirstInSorted(utf8OffsetMap, utf8Offset - this._mappingTableStartOffset) + this._mappingTableStartOffset;\r\n        }\r\n        return utf8Offset;\r\n    }\r\n    convertUtf16OffsetToUtf8(utf16Offset) {\r\n        if (utf16Offset < 0) {\r\n            return 0;\r\n        }\r\n        const utf8Array = this._utf8Bytes;\r\n        if (utf16Offset >= this.source.length) {\r\n            return utf8Array.length - 1;\r\n        }\r\n        const utf8OffsetMap = this.utf8Indexes;\r\n        if (utf8OffsetMap && utf16Offset >= this._mappingTableStartOffset) {\r\n            return utf8OffsetMap[utf16Offset - this._mappingTableStartOffset] + this._mappingTableStartOffset;\r\n        }\r\n        return utf16Offset;\r\n    }\r\n    encode() {\r\n        const str = this.source;\r\n        const n = str.length;\r\n        let utf16OffsetToUtf8;\r\n        let utf8Offset = 0;\r\n        let mappingTableStartOffset = 0;\r\n        function createOffsetTable(startOffset) {\r\n            const maxUtf8Len = (n - startOffset) * 3;\r\n            if (maxUtf8Len <= 0xff) {\r\n                utf16OffsetToUtf8 = new Uint8Array(n - startOffset);\r\n            }\r\n            else if (maxUtf8Len <= 0xffff) {\r\n                utf16OffsetToUtf8 = new Uint16Array(n - startOffset);\r\n            }\r\n            else {\r\n                utf16OffsetToUtf8 = new Uint32Array(n - startOffset);\r\n            }\r\n            mappingTableStartOffset = startOffset;\r\n            utf16OffsetToUtf8[utf8Offset++] = 0;\r\n        }\r\n        const u8view = new Uint8Array((n * 3) /* alloc max now, trim later*/ + 1 /** null termination character */);\r\n        let ptrHead = 0;\r\n        let i = 0;\r\n        // for some reason, v8 is faster with str.length than using a variable (might be illusion)\r\n        while (i < str.length) {\r\n            let codepoint;\r\n            const c = str.charCodeAt(i);\r\n            if (utf16OffsetToUtf8) {\r\n                utf16OffsetToUtf8[utf8Offset++] = ptrHead - mappingTableStartOffset;\r\n            }\r\n            if (c < 0xD800 || c > 0xDFFF) {\r\n                codepoint = c;\r\n            }\r\n            else if (c >= 0xDC00) {\r\n                codepoint = 0xFFFD;\r\n            }\r\n            else {\r\n                if (i === n - 1) {\r\n                    codepoint = 0xFFFD;\r\n                }\r\n                else {\r\n                    const d = str.charCodeAt(i + 1);\r\n                    if (0xDC00 <= d && d <= 0xDFFF) {\r\n                        if (!utf16OffsetToUtf8) {\r\n                            createOffsetTable(i);\r\n                        }\r\n                        const a = c & 0x3FF;\r\n                        const b = d & 0x3FF;\r\n                        codepoint = 0x10000 + (a << 10) + b;\r\n                        i += 1;\r\n                        utf16OffsetToUtf8[utf8Offset++] = ptrHead - mappingTableStartOffset;\r\n                    }\r\n                    else {\r\n                        codepoint = 0xFFFD;\r\n                    }\r\n                }\r\n            }\r\n            let bytesRequiredToEncode;\r\n            let offset;\r\n            if (codepoint <= 0x7F) {\r\n                bytesRequiredToEncode = 1;\r\n                offset = 0;\r\n            }\r\n            else if (codepoint <= 0x07FF) {\r\n                bytesRequiredToEncode = 2;\r\n                offset = 0xC0;\r\n            }\r\n            else if (codepoint <= 0xFFFF) {\r\n                bytesRequiredToEncode = 3;\r\n                offset = 0xE0;\r\n            }\r\n            else {\r\n                bytesRequiredToEncode = 4;\r\n                offset = 0xF0;\r\n            }\r\n            if (bytesRequiredToEncode === 1) {\r\n                u8view[ptrHead++] = codepoint;\r\n            }\r\n            else {\r\n                if (!utf16OffsetToUtf8) {\r\n                    createOffsetTable(ptrHead);\r\n                }\r\n                u8view[ptrHead++] = (codepoint >> (6 * (--bytesRequiredToEncode))) + offset;\r\n                while (bytesRequiredToEncode > 0) {\r\n                    const temp = codepoint >> (6 * (bytesRequiredToEncode - 1));\r\n                    u8view[ptrHead++] = (0x80 | (temp & 0x3F));\r\n                    bytesRequiredToEncode -= 1;\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n        const utf8 = u8view.slice(0, ptrHead + 1);\r\n        utf8[ptrHead] = 0x00;\r\n        this._utf8Bytes = utf8;\r\n        if (utf16OffsetToUtf8) { // set if UTF-16 surrogate chars or multi-byte characters found\r\n            this._utf8Indexes = utf16OffsetToUtf8;\r\n            this._mappingTableStartOffset = mappingTableStartOffset;\r\n        }\r\n    }\r\n}\r\nfunction findFirstInSorted(array, i) {\r\n    let low = 0;\r\n    let high = array.length;\r\n    if (high === 0) {\r\n        return 0; // no children\r\n    }\r\n    while (low < high) {\r\n        const mid = Math.floor((low + high) / 2);\r\n        if (array[mid] >= i) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    // low is on the index of the first value >= i or array.length. Decrement low until we find array[low] <= i\r\n    while (low > 0 && (low >= array.length || array[low] > i)) {\r\n        low--;\r\n    }\r\n    // check whether we are on the second index of a utf-16 surrogate char. If so, go to the first index.\r\n    if (low > 0 && array[low] === array[low - 1]) {\r\n        low--;\r\n    }\r\n    return low;\r\n}\r\nexports.default = OnigString;\r\n//# sourceMappingURL=OnigString.js.map\n\n//# sourceURL=webpack://init/./node_modules/onigasm/lib/OnigString.js?");

/***/ }),

/***/ "./node_modules/onigasm/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/onigasm/lib/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst onigasmH_1 = __webpack_require__(/*! ./onigasmH */ \"./node_modules/onigasm/lib/onigasmH.js\");\r\nexports.loadWASM = onigasmH_1.loadWASM;\r\nconst OnigRegExp_1 = __webpack_require__(/*! ./OnigRegExp */ \"./node_modules/onigasm/lib/OnigRegExp.js\");\r\nexports.OnigRegExp = OnigRegExp_1.default;\r\nconst OnigScanner_1 = __webpack_require__(/*! ./OnigScanner */ \"./node_modules/onigasm/lib/OnigScanner.js\");\r\nexports.OnigScanner = OnigScanner_1.default;\r\nconst OnigString_1 = __webpack_require__(/*! ./OnigString */ \"./node_modules/onigasm/lib/OnigString.js\");\r\nexports.OnigString = OnigString_1.default;\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://init/./node_modules/onigasm/lib/index.js?");

/***/ }),

/***/ "./node_modules/onigasm/lib/onigasm.js":
/*!*********************************************!*\
  !*** ./node_modules/onigasm/lib/onigasm.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var Onigasm = function(Onigasm) {\n  Onigasm = Onigasm || {};\n\nvar Module=typeof Onigasm!==\"undefined\"?Onigasm:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module[\"ENVIRONMENT\"]){if(Module[\"ENVIRONMENT\"]===\"WEB\"){ENVIRONMENT_IS_WEB=true}else if(Module[\"ENVIRONMENT\"]===\"WORKER\"){ENVIRONMENT_IS_WORKER=true}else if(Module[\"ENVIRONMENT\"]===\"NODE\"){ENVIRONMENT_IS_NODE=true}else if(Module[\"ENVIRONMENT\"]===\"SHELL\"){ENVIRONMENT_IS_SHELL=true}else{throw new Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\")}}else{ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&\"function\"===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS={};if(!nodePath)nodePath={};filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",(function(reason,p){process[\"exit\"](1)}));Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}Module[\"setWindowTitle\"]=(function(title){document.title=title})}Module[\"print\"]=typeof console!==\"undefined\"?console.log:typeof print!==\"undefined\"?print:null;Module[\"printErr\"]=typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn||Module[\"print\"];Module.print=Module[\"print\"];Module.printErr=Module[\"printErr\"];for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;Module.printErr(text)}}var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}var JSfuncs={\"stackSave\":(function(){stackSave()}),\"stackRestore\":(function(){stackRestore()}),\"arrayToC\":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\"stringToC\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={\"string\":JSfuncs[\"stringToC\"],\"array\":JSfuncs[\"arrayToC\"]};function ccall(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType===\"string\")ret=Pointer_stringify(ret);if(stack!==0){stackRestore(stack)}return ret}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ALLOC_STATIC=2;var ALLOC_NONE=4;function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function demangle(func){var __cxa_demangle_func=Module[\"___cxa_demangle\"]||Module[\"__cxa_demangle\"];assert(__cxa_demangle_func);try{var s=func.substr(1);var len=lengthBytesUTF8(s)+1;var buf=_malloc(len);stringToUTF8(s,buf,len);var status=_malloc(4);var ret=__cxa_demangle_func(buf,0,0,status);if(HEAP32[status>>2]===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}return func}function demangleAll(text){var regex=/__Z[\\w\\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+\" [\"+y+\"]\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}if(!Module[\"reallocBuffer\"])Module[\"reallocBuffer\"]=(function(size){var ret;try{if(ArrayBuffer.transfer){ret=ArrayBuffer.transfer(buffer,size)}else{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||157286400;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw\"Runtime error: expected the system to be little-endian!\";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_max=Math.max;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"onigasm.wast\";var wasmBinaryFile=\"onigasm.wasm\";var asmjsCodeFile=\"onigasm.temp.asm.js\";if(typeof Module[\"locateFile\"]===\"function\"){if(!isDataURI(wasmTextFile)){wasmTextFile=Module[\"locateFile\"](wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=Module[\"locateFile\"](wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=Module[\"locateFile\"](asmjsCodeFile)}}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":{\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})},\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){Module[\"printErr\"](\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){Module[\"printErr\"](\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){Module[\"printErr\"](\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){Module[\"printErr\"](\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){Module[\"printErr\"](\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource).catch((function(reason){Module[\"printErr\"](\"wasm streaming compile failed: \"+reason);Module[\"printErr\"](\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"memoryBase\"]){env[\"memoryBase\"]=Module[\"STATIC_BASE\"]}if(!env[\"tableBase\"]){env[\"tableBase\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);if(!exports)abort(\"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods\");return exports});}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+255296;__ATINIT__.push();var STATIC_BUMP=255296;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module[\"___cxa_is_pointer_type\"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module[\"___cxa_can_catch\"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___gxx_personality_v0(){}var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function flush_NO_FILESYSTEM(){var fflush=Module[\"_fflush\"];if(fflush)fflush(0);var printChar=___syscall146.printChar;if(!printChar)return;var buffers=___syscall146.buffers;if(buffers[1].length)printChar(1,10);if(buffers[2].length)printChar(2,10)}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffers){___syscall146.buffers=[null,[],[]];___syscall146.printChar=(function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?Module[\"print\"]:Module[\"printErr\"])(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}})}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _abort(){Module[\"abort\"]()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;Module[\"wasmTableSize\"]=90;Module[\"wasmMaxTableSize\"]=90;function invoke_i(index){try{return Module[\"dynCall_i\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_ii(index,a1){try{return Module[\"dynCall_ii\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iii(index,a1,a2){try{return Module[\"dynCall_iii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module[\"dynCall_iiii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_v(index){try{Module[\"dynCall_v\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vi(index,a1){try{Module[\"dynCall_vi\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module[\"dynCall_viiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module[\"dynCall_viiiii\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module[\"dynCall_viiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}Module.asmGlobalArg={};Module.asmLibraryArg={\"abort\":abort,\"assert\":assert,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"invoke_i\":invoke_i,\"invoke_ii\":invoke_ii,\"invoke_iii\":invoke_iii,\"invoke_iiii\":invoke_iiii,\"invoke_iiiii\":invoke_iiiii,\"invoke_v\":invoke_v,\"invoke_vi\":invoke_vi,\"invoke_viiii\":invoke_viiii,\"invoke_viiiii\":invoke_viiiii,\"invoke_viiiiii\":invoke_viiiiii,\"__ZSt18uncaught_exceptionv\":__ZSt18uncaught_exceptionv,\"___cxa_begin_catch\":___cxa_begin_catch,\"___cxa_find_matching_catch\":___cxa_find_matching_catch,\"___gxx_personality_v0\":___gxx_personality_v0,\"___resumeException\":___resumeException,\"___setErrNo\":___setErrNo,\"___syscall140\":___syscall140,\"___syscall146\":___syscall146,\"___syscall6\":___syscall6,\"_abort\":_abort,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_pthread_getspecific\":_pthread_getspecific,\"_pthread_key_create\":_pthread_key_create,\"_pthread_once\":_pthread_once,\"_pthread_setspecific\":_pthread_setspecific,\"flush_NO_FILESYSTEM\":flush_NO_FILESYSTEM,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"tempDoublePtr\":tempDoublePtr,\"ABORT\":ABORT,\"STACKTOP\":STACKTOP,\"STACK_MAX\":STACK_MAX};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var ___cxa_demangle=Module[\"___cxa_demangle\"]=(function(){return Module[\"asm\"][\"___cxa_demangle\"].apply(null,arguments)});var _compilePattern=Module[\"_compilePattern\"]=(function(){return Module[\"asm\"][\"_compilePattern\"].apply(null,arguments)});var _disposeCompiledPatterns=Module[\"_disposeCompiledPatterns\"]=(function(){return Module[\"asm\"][\"_disposeCompiledPatterns\"].apply(null,arguments)});var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=(function(){return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null,arguments)});var _findBestMatch=Module[\"_findBestMatch\"]=(function(){return Module[\"asm\"][\"_findBestMatch\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"_free\"].apply(null,arguments)});var _getLastError=Module[\"_getLastError\"]=(function(){return Module[\"asm\"][\"_getLastError\"].apply(null,arguments)});var _llvm_bswap_i32=Module[\"_llvm_bswap_i32\"]=(function(){return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"_malloc\"].apply(null,arguments)});var _memcpy=Module[\"_memcpy\"]=(function(){return Module[\"asm\"][\"_memcpy\"].apply(null,arguments)});var _memmove=Module[\"_memmove\"]=(function(){return Module[\"asm\"][\"_memmove\"].apply(null,arguments)});var _memset=Module[\"_memset\"]=(function(){return Module[\"asm\"][\"_memset\"].apply(null,arguments)});var _sbrk=Module[\"_sbrk\"]=(function(){return Module[\"asm\"][\"_sbrk\"].apply(null,arguments)});var establishStackSpace=Module[\"establishStackSpace\"]=(function(){return Module[\"asm\"][\"establishStackSpace\"].apply(null,arguments)});var getTempRet0=Module[\"getTempRet0\"]=(function(){return Module[\"asm\"][\"getTempRet0\"].apply(null,arguments)});var runPostSets=Module[\"runPostSets\"]=(function(){return Module[\"asm\"][\"runPostSets\"].apply(null,arguments)});var setTempRet0=Module[\"setTempRet0\"]=(function(){return Module[\"asm\"][\"setTempRet0\"].apply(null,arguments)});var setThrew=Module[\"setThrew\"]=(function(){return Module[\"asm\"][\"setThrew\"].apply(null,arguments)});var stackAlloc=Module[\"stackAlloc\"]=(function(){return Module[\"asm\"][\"stackAlloc\"].apply(null,arguments)});var stackRestore=Module[\"stackRestore\"]=(function(){return Module[\"asm\"][\"stackRestore\"].apply(null,arguments)});var stackSave=Module[\"stackSave\"]=(function(){return Module[\"asm\"][\"stackSave\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"dynCall_i\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"dynCall_ii\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"dynCall_iii\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiii\"].apply(null,arguments)});var dynCall_iiiii=Module[\"dynCall_iiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiii\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"dynCall_v\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"dynCall_vi\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiii\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiii\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null,arguments)});Module[\"asm\"]=asm;Module[\"ccall\"]=ccall;Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]&&status===0){return}if(Module[\"noExitRuntime\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}if(ENVIRONMENT_IS_NODE){process[\"exit\"](status)}Module[\"quit\"](status,new ExitStatus(status))}Module[\"exit\"]=exit;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run()\n\n\n\n\n\n  return Onigasm;\n};\nif (true)\n  module.exports = Onigasm;\nelse {}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://init/./node_modules/onigasm/lib/onigasm.js?");

/***/ }),

/***/ "./node_modules/onigasm/lib/onigasmH.js":
/*!**********************************************!*\
  !*** ./node_modules/onigasm/lib/onigasmH.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst OnigasmModuleFactory = __webpack_require__(/*! ./onigasm.js */ \"./node_modules/onigasm/lib/onigasm.js\" /** when TS is compiled to JS, this will mean `lib/onigasm.js` (emitted by `emcc`) */);\r\nasync function initModule(bytes) {\r\n    return new Promise((resolve, reject) => {\r\n        OnigasmModuleFactory({\r\n            instantiateWasm(imports, successCallback) {\r\n                WebAssembly.instantiate(bytes, imports)\r\n                    .then((output) => {\r\n                    successCallback(output.instance);\r\n                })\r\n                    .catch((e) => {\r\n                    throw e;\r\n                });\r\n                return {};\r\n            },\r\n        })\r\n            .then(moduleH => {\r\n            exports.onigasmH = moduleH;\r\n            resolve();\r\n        });\r\n    });\r\n}\r\nlet isInitialized = false;\r\n/**\r\n * Mount the .wasm file that will act as library's \"backend\"\r\n * @param data Path to .wasm file or it's ArrayBuffer\r\n */\r\nasync function loadWASM(data) {\r\n    if (isInitialized) {\r\n        throw new Error(`Onigasm#init has been called and was succesful, subsequent calls are not allowed once initialized`);\r\n    }\r\n    if (typeof data === 'string') {\r\n        const arrayBuffer = await (await fetch(data)).arrayBuffer();\r\n        await initModule(arrayBuffer);\r\n    }\r\n    else if (data instanceof ArrayBuffer) {\r\n        await initModule(data);\r\n    }\r\n    else {\r\n        throw new TypeError(`Expected a string (URL of .wasm file) or ArrayBuffer (.wasm file itself) as first parameter`);\r\n    }\r\n    isInitialized = true;\r\n}\r\nexports.loadWASM = loadWASM;\r\n//# sourceMappingURL=onigasmH.js.map\n\n//# sourceURL=webpack://init/./node_modules/onigasm/lib/onigasmH.js?");

/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://init/./node_modules/path-browserify/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://init/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/pseudomap/map.js":
/*!***************************************!*\
  !*** ./node_modules/pseudomap/map.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = __webpack_require__(/*! ./pseudomap */ \"./node_modules/pseudomap/pseudomap.js\")\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://init/./node_modules/pseudomap/map.js?");

/***/ }),

/***/ "./node_modules/pseudomap/pseudomap.js":
/*!*********************************************!*\
  !*** ./node_modules/pseudomap/pseudomap.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n\n\n//# sourceURL=webpack://init/./node_modules/pseudomap/pseudomap.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack://init/./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://init/./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://init/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/yallist/yallist.js":
/*!*****************************************!*\
  !*** ./node_modules/yallist/yallist.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\n\n//# sourceURL=webpack://init/./node_modules/yallist/yallist.js?");

/***/ })

/******/ });
});